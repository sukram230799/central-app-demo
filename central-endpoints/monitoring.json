{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Central Monitoring APIs"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "AP"
    },
    {
      "name": "Network"
    },
    {
      "name": "Client"
    },
    {
      "name": "Swarm"
    },
    {
      "name": "Label"
    },
    {
      "name": "Site"
    },
    {
      "name": "Switch"
    },
    {
      "name": "Events"
    },
    {
      "name": "VPN"
    },
    {
      "name": "MobilityController"
    },
    {
      "name": "Gateway"
    }
  ],
  "parameters": {
    "group": {
      "name": "group",
      "in": "query",
      "description": "Filter by group name",
      "required": false,
      "type": "string"
    },
    "swarm_id": {
      "name": "swarm_id",
      "in": "query",
      "description": "Filter by Swarm ID. Field supported for AP clients only",
      "required": false,
      "type": "string"
    },
    "label": {
      "name": "label",
      "in": "query",
      "description": "Filter by Label name",
      "required": false,
      "type": "string"
    },
    "network": {
      "name": "network",
      "in": "query",
      "description": "Filter by network name. Field supported for wireless clients only",
      "required": false,
      "type": "string"
    },
    "band": {
      "name": "band",
      "in": "query",
      "description": "Filter by band. Value can be either \"2.4\", \"5\" or \"6\". Field supported for wireless clients only.",
      "required": false,
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "Pagination offset",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "description": "Pagination limit. Default is 100 and max is 1000",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "Comma separated list of fields to be returned",
      "required": false,
      "type": "string"
    },
    "from_timestamp": {
      "name": "from_timestamp",
      "in": "query",
      "description": "Need information from this timestamp. Timestamp is epoch in seconds. Default is current timestamp minus 3 hours",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "to_timestamp": {
      "name": "to_timestamp",
      "in": "query",
      "description": "Need information to this timestamp. Timestamp is epoch in seconds. Default is current timestamp",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "site": {
      "name": "site",
      "in": "query",
      "description": "Filter by Site name",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/monitoring/v2/networks": {
      "get": {
        "description": "Get a list of networks. You can only specify one of group, swarm_id, label, site parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0003 - Validation Error. Unsupported query combination\n3. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_networks_v2",
        "tags": [
          "Network"
        ],
        "summary": "List all Networks",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "calculate_client_count",
            "in": "query",
            "description": "Whether to calculate client count per SSID",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +essid, -essid. Default is '+essid'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NetworkList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/networks/{network_name}": {
      "get": {
        "description": "Get Network details\nPossible error_codes for the error responses are\n1. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_network_v2",
        "tags": [
          "Network"
        ],
        "summary": "Get Network details",
        "parameters": [
          {
            "name": "network_name",
            "in": "path",
            "description": "Name of the network to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/networks/bandwidth_usage": {
      "get": {
        "description": "Get WLAN network bandwidth usage over a time period. You can only specify one of group, swarm_id, label, site parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0005 - Validation Error. Missing required parameter.\n",
        "operationId": "api.external_controller.get_networks_bandwidth_usage_v2",
        "tags": [
          "Network"
        ],
        "summary": "WLAN Network Bandwidth usage",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "Filter by network name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "$ref": "#/parameters/site"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/aps": {
      "get": {
        "description": "Get access points. You can only specify one of group, swarm_id, label, site parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_aps_v2",
        "tags": [
          "AP"
        ],
        "summary": "List Access Points",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by AP status",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by AP serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by AP MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by AP Model",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, ip_address, model, firmware_version, swarm_master, labels, radios, ap_deployment_mode, public_ip_address, site, last_modified, ap_group, subnet_mask, mesh_role",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total APs",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculate_client_count",
            "in": "query",
            "description": "Whether to calculate client count per AP",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculate_ssid_count",
            "in": "query",
            "description": "Whether to calculate ssid count per AP",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "show_resource_details",
            "in": "query",
            "description": "Whether to show AP cpu_utilization, uptime, mem_total, mem_free, mesh_role, mode.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +macaddr, -macaddr, +swarm_id, -swarm_id. Default is '+serial'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/APList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/bssids": {
      "get": {
        "description": "Get a list of BSSIDs. You can only specify one of group, swarm_id, label, serial, macaddr, site parameters\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n5. 0006 - Internal data Error.\n",
        "operationId": "api.external_controller.get_bssids_v2",
        "tags": [
          "AP"
        ],
        "summary": "List BSSIDs",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by AP serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by AP MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total APs",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +macaddr,-macaddr, +swarm_id, -swarm_id.Default is '+serial'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApBssidList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/aps/{serial}": {
      "get": {
        "description": "Get AP details\n",
        "operationId": "api.external_controller.get_ap",
        "tags": [
          "AP"
        ],
        "summary": "AP Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of AP to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/APDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete AP\n",
        "operationId": "api.external_controller.delete_ap",
        "tags": [
          "AP"
        ],
        "summary": "Delete AP",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of AP to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v3/aps/{serial}/rf_summary": {
      "get": {
        "description": "Get AP RF summary of channel utilization, noise floor in negative, errors, drops and\nretries over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0004 - Validation Error. Invalid value for a query parameter\n4. 0005 - Validation Error. Missing required query parameter\n",
        "operationId": "api.external_controller.get_ap_rf_summary_v3",
        "tags": [
          "AP"
        ],
        "summary": "AP RF Summary",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of AP to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "band",
            "in": "query",
            "description": "Filter by band (2.4, 5 or 6). Valid only when serial parameter is specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "radio_number",
            "in": "query",
            "description": "Filter by radio_number (0, 1 or 2). Valid only when serial parameter is specified.",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RFSummaryList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v3/aps/bandwidth_usage": {
      "get": {
        "description": "Get access points bandwidth usage over a time period. You can only specify one of group, swarm_id, label,\nserial, cluster_id, site parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n5. 0005 - Validation Error. Missing required parameter.\n",
        "operationId": "api.external_controller.get_aps_bandwidth_usage_v3",
        "tags": [
          "AP"
        ],
        "summary": "AP Bandwidth Usage",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by AP serial",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Filter by interval (5minutes or 1hour or 1day or 1week).",
            "required": false,
            "type": "string"
          },
          {
            "name": "band",
            "in": "query",
            "description": "Filter by band (2.4, 5 or 6). Valid only when serial parameter is specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "radio_number",
            "in": "query",
            "description": "Filter by radio_number (0, 1 or 2). Valid only when serial parameter is specified.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "ethernet_interface_index",
            "in": "query",
            "description": "Filter by ethernet interface index. Valid only when serial parameter is specified. Valid range is 0-3.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "network",
            "in": "query",
            "description": "Filter by network name. Valid only when serial parameter is specified.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/aps/bandwidth_usage/topn": {
      "get": {
        "description": "Get top N AP details over a time period. You can only specify one of group, swarm_id, label, cluster_id, site parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_aps_bandwidth_usage_topn_v2",
        "tags": [
          "AP"
        ],
        "summary": "Top N AP Details",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Required top N AP count. Default is 5 and maximum is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TopNApList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/swarms/bandwidth_usage/topn": {
      "get": {
        "description": "Get top N Swarm by bandwidth usage over a time period.\nparameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_swarms_bandwidth_usage_topn",
        "tags": [
          "Swarm"
        ],
        "summary": "Top N Swarms By Bandwidth Usage",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Required top N Swarm count. Default is 5 and maximum is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TopNSwarmList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/swarms/clients_count/topn": {
      "get": {
        "description": "Get top N Swarm by clients count over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_swarms_clients_count_topn",
        "tags": [
          "Swarm"
        ],
        "summary": "Top N Swarms By Clients Count",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Required top N Swarm count. Default is 5 and maximum is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Required sort 'by_peak' or 'by_avg'. Default is 'by_avg'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TopNSwarmListClient"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/wireless": {
      "get": {
        "description": "Get a list of wireless clients. You can only specify one of group, swarm_id, label parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_wireless_clients",
        "tags": [
          "Client"
        ],
        "summary": "List Wireless Clients",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "$ref": "#/parameters/network"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by AP serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "os_type",
            "in": "query",
            "description": "Filter by client os type",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/band"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are name, ip_address, username, os_type, connection, associated_device, group_name, swarm_id, network, radio_mac, manufacturer, vlan, encryption_method, radio_number, speed, usage, health, labels, site, signal_strength, signal_db, snr",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total wireless Clients",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +macaddr, -macaddr.  Default is '+macaddr'",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_client_mac",
            "in": "query",
            "description": "Input the last processed client mac that got received in your last response. Please note that when last_client_mac is inputted , offset will not make any sense and by default the results are sorted by macaddr.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClientList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/wired": {
      "get": {
        "description": "Get a list of wired clients. You can only specify one of group, swarm_id, cluster_id, stack_id and\nlabel parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_wired_clients",
        "tags": [
          "Client"
        ],
        "summary": "List Wired Clients",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by Switch or AP serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are name, ip_address, username, associated_device, group_name, interface_mac, vlan",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total wired Clients",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +macaddr, -macaddr.  Default is '+macaddr'",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_client_mac",
            "in": "query",
            "description": "Input the last processed client mac that got received in your last response. Please note that when last_client_mac is inputted , offset will not make any sense and by default the results are sorted by macaddr.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/WiredClientList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/clients": {
      "get": {
        "description": "This is a unified form of List APIs /monitoring/v1/clients/wired and /monitoring/v1/clients/wireless and it is backward compatible with these v1 apis.\n\nGet a list of unified clients. You can only specify one of group, swarm_id, cluster_id, network, site and\nlabel parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_v2_unified_clients",
        "tags": [
          "Client"
        ],
        "summary": "List Unified Clients (Wired/Wireless). Option to choose Connected/Failed Clients",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "$ref": "#/parameters/network"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by device serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/band"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id. Only for Wired Clients",
            "required": false,
            "type": "string"
          },
          {
            "name": "os_type",
            "in": "query",
            "description": "Filter by OS Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. \nValid fields for wired clients are name, ip_address, username, associated_device, group_name, interface_mac, vlan. \nValid field values for wireless clients are name, ip_address, username, os_type, connection, associated_device, group_name, swarm_id, network, radio_mac, manufacturer, vlan, encryption_method, radio_number, speed, usage, health, labels, site, signal_strength, signal_db, snr.",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Wireless/Wired Clients",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +macaddr, -macaddr.  Default is '+macaddr'",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_client_mac",
            "in": "query",
            "description": "Input the last processed client mac that got received in your last response. Please note that when last_client_mac is inputted , offset will not make any sense and by default the results are sorted by macaddr.",
            "required": false,
            "type": "string"
          },
          {
            "name": "timerange",
            "in": "query",
            "type": "string",
            "enum": [
              "3H",
              "1D",
              "1W",
              "1M",
              "3M"
            ],
            "description": "Time range for unified clients information.\n3H = 3 Hours, 1D = 1 Day, 1W = 1 Week, 1M = 1Month, 3M = 3Months.\n",
            "default": "3H",
            "required": true
          },
          {
            "name": "client_type",
            "in": "query",
            "type": "string",
            "enum": [
              "WIRELESS",
              "WIRED"
            ],
            "description": "WIRED = List Wired Clients, WIRELESS = List Wireless Clients.",
            "default": "WIRELESS",
            "required": true
          },
          {
            "name": "client_status",
            "in": "query",
            "type": "string",
            "enum": [
              "CONNECTED",
              "FAILED_TO_CONNECT"
            ],
            "description": "CONNECTED = List Connected Clients, FAILED_TO_CONNECT = List Failed Clients.\nFailed to connect status not supported for wired clients.\n",
            "default": "CONNECTED",
            "required": true
          },
          {
            "name": "show_usage",
            "in": "query",
            "description": "Whether to show usage",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "show_manufacturer",
            "in": "query",
            "description": "Whether to show manufacturer",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "show_signal_db",
            "in": "query",
            "description": "Whether to show signal_db and signal_strength. Field supported for wireless clients only",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UnifiedClientList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/clients/{macaddr}": {
      "get": {
        "description": "This is a unified form of Details APIs /monitoring/v1/clients/wired/{macaddr} and /monitoring/v1/clients/wireless/{macaddr} and it is backward compatible with these v1 apis.\n\nGet wireless/wired client details\n",
        "operationId": "api.external_controller.get_v2_unified_client_detail",
        "tags": [
          "Client"
        ],
        "summary": "Client Details",
        "parameters": [
          {
            "name": "macaddr",
            "in": "path",
            "description": "MAC address of the Wireless/Wired Client to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UnifiedClient"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/wireless/{macaddr}": {
      "get": {
        "description": "Get wireless client details\n",
        "operationId": "api.external_controller.get_wireless_client",
        "tags": [
          "Client"
        ],
        "summary": "Wireless Client Details",
        "parameters": [
          {
            "name": "macaddr",
            "in": "path",
            "description": "MAC address of the Wireless Client to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClientDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/wireless/{macaddr}/mobility_trail": {
      "get": {
        "description": "Get wireless client mobility details\nPossible error_code for the error response is\n1. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_wireless_client_mobility",
        "tags": [
          "Client"
        ],
        "summary": "Wireless Client Mobility Trail",
        "parameters": [
          {
            "name": "macaddr",
            "in": "path",
            "description": "MAC address of the Wireless Client to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total transitions",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClientMobilityTrailList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/wired/{macaddr}": {
      "get": {
        "description": "Get wired client details\n",
        "operationId": "api.external_controller.get_wired_client",
        "tags": [
          "Client"
        ],
        "summary": "Wired Client Details",
        "parameters": [
          {
            "name": "macaddr",
            "in": "path",
            "description": "MAC address of the Wired Client to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/WiredClientDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/bandwidth_usage": {
      "get": {
        "description": "Get clients bandwidth usage over a time period. You can only specify one of group, swarm_id, label, cluster_id\nand stack_id parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_clients_bandwidth_usage",
        "tags": [
          "Client"
        ],
        "summary": "Client Bandwidth Usage",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by switch serial",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by Client macaddr",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/bandwidth_usage/topn": {
      "get": {
        "description": "Get top N client details over a time period. You can only specify one of group, swarm_id, label, cluster_id\nand stack_id parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_clients_bandwidth_usage_topn",
        "tags": [
          "Client"
        ],
        "summary": "Top N Clients",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/network"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Required top N clients count. Default is 5 and maximum is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TopNClientList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/clients/count": {
      "get": {
        "description": "Get the total clients connected\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n5. 0005 - Validation Error. Missing required query parameter\n",
        "operationId": "api.external_controller.get_clients_count",
        "tags": [
          "Client"
        ],
        "summary": "Total Clients Count",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/network"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "Filter by Mobility Controller serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "Filter by device type. Value can be either \"AP\" or \"Switch\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by Ap or serial",
            "required": false,
            "type": "string"
          },
          {
            "name": "band",
            "in": "query",
            "description": "Filter by band. Value can be either \"2.4\", \"5\" or \"6\". Valid only when serial parameter is specified.",
            "required": false,
            "type": "string"
          },
          {
            "name": "radio_number",
            "in": "query",
            "description": "Filter by radio_number (0, 1 or 2). Valid only when serial parameter is specified. If band is provided and radio_number is not provided then radio_number is defaulted to 0, 1 and 2 for band 5, 2.4 and 6 respectively.",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClientCountList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/swarms": {
      "get": {
        "description": "Get list of swarms. You can optionally specify a group to filter on groups.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_swarms",
        "tags": [
          "Swarm"
        ],
        "summary": "List Swarms",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Swarm status",
            "required": false,
            "type": "string"
          },
          {
            "name": "public_ip_address",
            "in": "query",
            "description": "Filter by public ip address",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, ip_address, public_ip_address, firmware_version",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Swarms",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +swarm_id, -swarm_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "swarm_name",
            "in": "query",
            "description": "Filter by swarm name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwarmList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/swarms/{swarm_id}": {
      "get": {
        "description": "Get Swarm details\n",
        "operationId": "api.external_controller.get_swarm",
        "tags": [
          "Swarm"
        ],
        "summary": "Swarm Details",
        "parameters": [
          {
            "name": "swarm_id",
            "in": "path",
            "description": "Swarm ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Swarm"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/vpn/info": {
      "get": {
        "description": "Get VPN details\n",
        "operationId": "api.external_controller.get_vpn_info",
        "tags": [
          "VPN"
        ],
        "summary": "Vpn Details",
        "parameters": [
          {
            "name": "swarm_id",
            "in": "query",
            "description": "Filter by Swarm ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/VpnTunnelList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v3/vpn/usage": {
      "post": {
        "description": "Get VPN usages per tunnel over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_vpn_usage_v3",
        "tags": [
          "VPN"
        ],
        "summary": "Swarm VPN stats",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Get VPN tunnel usage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTunnelUsage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/mobility_controllers": {
      "get": {
        "description": "Get mobility controllers.\nThis API is deprecated and will be removed on 2022-06-30T00:00:00Z.\nFor cloud deployment, use /monitoring/v1/gateways.\nFor controller on-prem deployment, use /monitoring/v2/mobility_controllers.\nYou can only specify one of group, label parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_mcs",
        "deprecated": true,
        "tags": [
          "MobilityController"
        ],
        "summary": "List Mobility Controllers",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Mobility Controller status",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by Mobility Controller MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by Mobility Controller Model",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, ip_address, model, firmware_version, labels, ap_count, usage",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Mobility Controllers",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +macaddr, -macaddr. Default is '+serial'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MCList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/mobility_controllers/{serial}": {
      "get": {
        "description": "Get mobility controller details.\nThis API is deprecated and will be removed on 2022-06-30T00:00:00Z.\nFor cloud deployment, use /monitoring/v1/gateways/{serial}.\nFor controller on-prem deployment, use /monitoring/v2/mobility_controllers/{serial}.\n",
        "operationId": "api.external_controller.get_mc",
        "deprecated": true,
        "tags": [
          "MobilityController"
        ],
        "summary": "Mobility Controller Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of Mobility Controller to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "stats_metric",
            "in": "query",
            "description": "If set, gets the uplinks and tunnels count",
            "type": "boolean",
            "required": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MCDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete mobility controller.\nThis API is deprecated and will be removed on 2022-06-30T00:00:00Z.\nFor cloud deployment, use /monitoring/v1/gateways/{serial}.\nFor controller on-prem deployment, use /monitoring/v2/mobility_controllers/{serial}.\n",
        "operationId": "api.external_controller.delete_mc",
        "deprecated": true,
        "tags": [
          "MobilityController"
        ],
        "summary": "Delete Mobility Controller",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of Mobility Controller to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/mobility_controllers/{serial}/ports/bandwidth_usage": {
      "get": {
        "description": "Get Mobility Controller ports bandwidth usage over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_mc_ports_bandwidth_usage",
        "tags": [
          "MobilityController"
        ],
        "summary": "Mobility Controllers Ports Bandwidth Usage",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of Mobility Controller to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port (example GE0/0/1)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/mobility_controllers/{serial}/ports": {
      "get": {
        "description": "Get mobility controllers ports details.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_mc_ports",
        "tags": [
          "MobilityController"
        ],
        "summary": "Mobility Controllers Ports Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of mobility controller to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/mobility_controllers/{serial}/vlan": {
      "get": {
        "description": "Get mobility controller's VLAN information.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_vlan_info",
        "tags": [
          "MobilityController"
        ],
        "summary": "Mobility Controllers VLAN details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of mobility controller to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GatewayVLANInfo"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/mobility_controllers": {
      "get": {
        "description": "Get mobility controllers.\nFor cloud deployment, use /monitoring/v1/gateways/{serial}.\nYou can only specify one of group, label parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_mcs_v2",
        "tags": [
          "MobilityController"
        ],
        "summary": "List Mobility Controllers",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Mobility Controller status",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by Mobility Controller MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by Mobility Controller Model",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, ip_address, model, firmware_version, labels, ap_count, usage",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Mobility Controllers",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +macaddr, -macaddr. Default is '+serial'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MCList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/mobility_controllers/{serial}": {
      "get": {
        "description": "Get mobility controller details.\nFor cloud deployment, use /monitoring/v1/gateways/{serial}.\n",
        "operationId": "api.external_controller.get_mc_v2",
        "tags": [
          "MobilityController"
        ],
        "summary": "Mobility Controller Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of Mobility Controller to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "stats_metric",
            "in": "query",
            "description": "If set, gets the uplinks and tunnels count",
            "type": "boolean",
            "required": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MCDetailV2"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete mobility controller.\nFor cloud deployment, use /monitoring/v1/gateways/{serial}.\n",
        "operationId": "api.external_controller.delete_mc_v2",
        "tags": [
          "MobilityController"
        ],
        "summary": "Delete Mobility Controller",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of Mobility Controller to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways": {
      "get": {
        "description": "Get gateways. You can only specify one of group, label parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_gateways",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway List",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/site"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Gateway status",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by Gateway MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by Gateway Model",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, ip_address, model, firmware_version, labels, ap_count, usage",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Gateways",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +macaddr, -macaddr. Default is '+serial'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GatewayList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}": {
      "get": {
        "description": "Get gateway details\n",
        "operationId": "api.external_controller.get_gateway",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of gateway to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "stats_metric",
            "in": "query",
            "description": "If set, gets the uplinks and tunnels count",
            "type": "boolean",
            "required": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MCDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete gateway\n",
        "operationId": "api.external_controller.delete_gateway",
        "tags": [
          "Gateway"
        ],
        "summary": "Delete Gateway",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial Number of Gateway to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/uplinks": {
      "get": {
        "description": "Get gateway uplink details.\n",
        "operationId": "api.external_controller.get_gateway_uplinks_detail",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Uplink Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of gateway to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "timerange",
            "in": "query",
            "type": "string",
            "enum": [
              "3H",
              "1D",
              "1W",
              "1M",
              "3M"
            ],
            "description": "Time range for Uplink stats information.\n3H = 3 Hours, 1D = 1 Day, 1W = 1 Week, 1M = 1Month, 3M = 3Months.\n",
            "default": "3H",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UplinkDetails"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/uplinks/bandwidth_usage": {
      "get": {
        "description": "Get gateway uplink bandwidth usage over a time period.",
        "operationId": "api.external_controller.get_gateway_uplinks_bandwidth_usage",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Uplink Bandwidth Usage",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Gateway serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "uplink_id",
            "in": "query",
            "description": "Filter by uplink ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Filter by interval (5minutes or 1hour or 1day or 1week).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/tunnels/stats": {
      "get": {
        "description": "Get gateway uplink tunnel stats over a time period for a particular gateway.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n5. 0005 - Validation Error. Missing required parameter.\n",
        "operationId": "api.external_controller.get_gateway_uplinks_tunnel_stats",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Uplink tunnel stats",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by Gateway serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "uplink_id",
            "in": "query",
            "description": "Filter by map ID.This field has been DEPRECATED.",
            "required": false,
            "type": "string"
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Filter by tunnel map name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Filter by interval (5minutes or 1hour or 1day or 1week).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/uplinks/wan_compression_stats": {
      "get": {
        "description": "Get Gateway WAN compression stats over a time period.\n",
        "operationId": "api.external_controller.get_gateway_uplinks_wan_compression_usage",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Uplink WAN compression stats",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Gateway serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "uplink_id",
            "in": "query",
            "description": "Filter by uplink ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Filter by interval (5minutes or 1hour or 1day or 1week).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/WANCompressionStatsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/uplinks/distribution": {
      "get": {
        "description": "Get gateway uplinks distribution.\n",
        "operationId": "api.external_controller.get_gateway_uplinks_distribution",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Uplink distribution",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Gateway serial",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UplinksDistributionList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/ports/bandwidth_usage": {
      "get": {
        "description": "Get Gateway ports bandwidth usage over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_gateway_ports_bandwidth_usage",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Ports Bandwidth Usage",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of Gateway to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port (example GE0/0/1)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/ports": {
      "get": {
        "description": "Get gateways ports details.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_gateway_ports",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Ports Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of Gateway to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/ports/errors": {
      "get": {
        "description": "Get gateway port errors over a time period.\n",
        "operationId": "api.external_controller.get_gateway_port_errors",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Port Errors",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of Gateway to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port (example GE0/0/1)",
            "required": true,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "Sampling interval of Port Errors.",
            "enum": [
              "5minutes",
              "1hour",
              "1day",
              "1week"
            ],
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GatewayPortErrorsRoot"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/tunnels": {
      "get": {
        "description": "Get gateway Uplink tunnel details.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_gateway_tunnels",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway Tunnels Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of gateway to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "timerange",
            "in": "query",
            "type": "string",
            "enum": [
              "3H",
              "1D",
              "1W",
              "1M",
              "3M"
            ],
            "description": "Time range for tunnel stats information.\n3H = 3 Hours, 1D = 1 Day, 1W = 1 Week, 1M = 1Month, 3M = 3Months.\n",
            "default": "3H"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TunnelList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/dhcp_clients": {
      "get": {
        "description": "Get gateway DHCP Clients information.\n",
        "operationId": "api.external_controller.get_gateway_dhcp_clients",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway DHCP Clients information",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Serial number of gateway to be queried"
          },
          {
            "name": "reservation",
            "in": "query",
            "type": "boolean",
            "required": false,
            "default": true,
            "description": "Flag to turn on/off listing DHCP reservations(if any)"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DHCPClientList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/dhcp_pools": {
      "get": {
        "description": "Get gateway DHCP Pools information.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_gateway_dhcp_pools",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway DHCP Pools details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of gateway to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DHCPPool"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/gateways/{serial}/vlan": {
      "get": {
        "description": "Get gateway's VLAN information.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_gateway_vlan_info",
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway VLAN details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of gateway to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GatewayVLANInfo"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v1/labels": {
      "get": {
        "description": "Get list of Labels and Sites. \nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "labels.external_controller.get_labels",
        "tags": [
          "Label"
        ],
        "summary": "List Labels",
        "parameters": [
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Labels",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "Label category ID",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +label_name, -label_name, +category_name, -category_name. Default is +label_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LabelList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a Label.",
        "tags": [
          "Label"
        ],
        "summary": "Create Label",
        "operationId": "labels.external_controller.create_label",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Label to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/labels": {
      "get": {
        "description": "Get list of default Labels. \nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "labels.external_controller.get_default_labels",
        "tags": [
          "Label"
        ],
        "summary": "List Default Labels",
        "parameters": [
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Default Labels",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +label_name, -label_name. Default is +label_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LabelList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v1/labels/{label_id}": {
      "get": {
        "description": "Get Label details. \n",
        "operationId": "labels.external_controller.get_label",
        "tags": [
          "Label"
        ],
        "summary": "Label details",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "description": "Label name",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update Label name.\n",
        "tags": [
          "Label"
        ],
        "summary": "Update Label",
        "operationId": "labels.external_controller.update_label",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "description": "Label ID",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update a label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Label.\n",
        "tags": [
          "Label"
        ],
        "summary": "Delete Label",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "description": "Label ID",
            "type": "integer",
            "required": true
          }
        ],
        "operationId": "labels.external_controller.delete_label",
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v1/labels/associations": {
      "post": {
        "description": "Add a Label to a device.",
        "tags": [
          "Label"
        ],
        "summary": "Associate Label to device",
        "operationId": "labels.external_controller.assign_label",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Associate a label to a device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove a Label from a device.",
        "tags": [
          "Label"
        ],
        "summary": "Unassociate Label from device",
        "operationId": "labels.external_controller.unassign_label",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Unassociate a label to a device",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelUnassociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/labels/associations": {
      "post": {
        "description": "Add a Label to devices.",
        "tags": [
          "Label"
        ],
        "summary": "Associate Label to a list of devices",
        "operationId": "labels.external_controller.assign_label_to_devices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of device serial numbers that have to be associated to a label.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelAssociationList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BulkAssociationResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove a Label from devices.",
        "tags": [
          "Label"
        ],
        "summary": "Unassociate a label from a list of devices",
        "operationId": "labels.external_controller.unassign_label_from_devices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of device serial numbers that have to be unassociated from a label. A maximum of 5000 device serials numbers are allowed.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelAssociationList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BulkAssociationResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v1/labels/categories": {
      "get": {
        "description": "Get list of Label categories.\n",
        "operationId": "labels.external_controller.get_label_categories",
        "tags": [
          "Label"
        ],
        "summary": "List Label Categories",
        "parameters": [
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total label categories",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LabelCategoryList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/sites": {
      "get": {
        "description": "Get list of Sites. \nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "sites.external_controller.get_sites",
        "tags": [
          "Site"
        ],
        "summary": "List Sites",
        "parameters": [
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Site Labels",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +site_name, -site_name. Default is +site_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a Site. \nSite can be created using either address or geolocation. \nAll fields within geolocation are mandatory. \n",
        "tags": [
          "Site"
        ],
        "summary": "Create Site",
        "operationId": "sites.external_controller.create_site",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Site to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/sites/{site_id}": {
      "get": {
        "description": "Get Site details.\n",
        "operationId": "sites.external_controller.get_site",
        "tags": [
          "Site"
        ],
        "summary": "Site details",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site ID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a Site. \nSite name is a mandatory parameter. Site can be updated with either address or geolocation. \nAll fields within geolocation are mandatory. \n",
        "tags": [
          "Site"
        ],
        "summary": "Update Site",
        "operationId": "sites.external_controller.update_site",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site ID",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update a site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Site.\n",
        "tags": [
          "Site"
        ],
        "summary": "Delete Site",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site ID",
            "type": "integer",
            "required": true
          }
        ],
        "operationId": "sites.external_controller.delete_site",
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/sites/associate": {
      "post": {
        "description": "Add device to a Site.",
        "tags": [
          "Site"
        ],
        "summary": "Associate Site to device",
        "operationId": "sites.external_controller.assign_site",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add device to a Site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove device from a Site.",
        "tags": [
          "Site"
        ],
        "summary": "Unassociate Site from device",
        "operationId": "sites.external_controller.unassign_site",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Remove device from a Site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/central/v2/sites/associations": {
      "post": {
        "description": " Add devices to a Site.",
        "tags": [
          "Site"
        ],
        "summary": "Associate Site to a list of devices",
        "operationId": "sites.external_controller.assign_site_to_devices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of device serial numbers that have to be associated to a Site",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAssociationList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BulkSiteAssociationResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove devices from a Site.",
        "tags": [
          "Site"
        ],
        "summary": "Unassociate a site from a list of devices",
        "operationId": "sites.external_controller.unassign_site_from_devices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of device serial numbers that have to be unassociated from a site. A maximum of 5000 device serials numbers are allowed.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAssociationList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BulkSiteAssociationResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches": {
      "get": {
        "description": "Get switches You can only specify one of group, label and stack_id parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_switches",
        "tags": [
          "Switch"
        ],
        "summary": "List Switches",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by Switch status",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are status, macaddr, model, ip_address, public_ip_address, firmware_version, labels, uplink_ports, site",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total Switches",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "show_resource_details",
            "in": "query",
            "description": "Whether to show switch uptime, max_power, power_consumption, temperature, fan_speed, cpu_utilization, mem_free, mem_total, poe_consumption.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculate_client_count",
            "in": "query",
            "description": "Whether to calculate client count per Switch",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "public_ip_address",
            "in": "query",
            "description": "Filter by public ip address",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "Filter by site name",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +serial, -serial, +name, -name, +macaddr, -macaddr",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwitchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/vlan": {
      "get": {
        "description": "Get switch vlan info\n",
        "operationId": "api.external_controller.get_switch_vlan",
        "tags": [
          "Switch"
        ],
        "summary": "Get vlan info of the switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by vlan name",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by vlan id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tagged_port",
            "in": "query",
            "description": "Filter by tagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "untagged_port",
            "in": "query",
            "description": "Filter by untagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_jumbo_enabled",
            "in": "query",
            "description": "Filter by jumbo enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_voice_enabled",
            "in": "query",
            "description": "Filter by voice enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_igmp_enabled",
            "in": "query",
            "description": "Filter by igmp enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the vlan to be queried",
            "required": false,
            "type": "string"
          },
          {
            "name": "primary_vlan_id",
            "in": "query",
            "description": "Primary Vlan Id of the vlan to be queried\"",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status of VLAN. Status can be Up/Down",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +name, -name",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total vlans",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwitchStackVlanList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/vlan": {
      "get": {
        "description": "Get vlan info for CX switch\n",
        "operationId": "api.external_controller.get_cx_switch_vlan",
        "tags": [
          "Switch"
        ],
        "summary": "Get vlan info for CX switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by vlan name",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by vlan id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tagged_port",
            "in": "query",
            "description": "Filter by tagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "untagged_port",
            "in": "query",
            "description": "Filter by untagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_jumbo_enabled",
            "in": "query",
            "description": "Filter by jumbo enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_voice_enabled",
            "in": "query",
            "description": "Filter by voice enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_igmp_enabled",
            "in": "query",
            "description": "Filter by igmp enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the vlan to be queried",
            "required": false,
            "type": "string"
          },
          {
            "name": "primary_vlan_id",
            "in": "query",
            "description": "Primary Vlan Id of the vlan to be queried\"",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status of VLAN. Status can be Up/Down",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +name, -name",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total vlans",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXSwitchStackVlanList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switch_stacks/{stack_id}/vlan": {
      "get": {
        "description": "Get switch stack vlan info\n",
        "operationId": "api.external_controller.get_switch_stack_vlan",
        "tags": [
          "Switch"
        ],
        "summary": "Get vlan info of the switch stack",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by switch stack id",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by vlan name",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by vlan id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tagged_port",
            "in": "query",
            "description": "Filter by tagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "untagged_port",
            "in": "query",
            "description": "Filter by untagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_jumbo_enabled",
            "in": "query",
            "description": "Filter by jumbo enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_voice_enabled",
            "in": "query",
            "description": "Filter by voice enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_igmp_enabled",
            "in": "query",
            "description": "Filter by igmp enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the vlan to be queried",
            "required": false,
            "type": "string"
          },
          {
            "name": "primary_vlan_id",
            "in": "query",
            "description": "Primary Vlan Id of the vlan to be queried\"",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status of VLAN. Status can be Up/Down",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +name, -name",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total vlans",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwitchStackVlanList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switch_stacks/{stack_id}/vlan": {
      "get": {
        "description": "Get switch stack vlan info for CX\n",
        "operationId": "api.external_controller.get_cx_switch_stack_vlan",
        "tags": [
          "Switch"
        ],
        "summary": "Get vlan info of the CX switch stack",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by switch stack id",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by vlan name",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by vlan id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tagged_port",
            "in": "query",
            "description": "Filter by tagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "untagged_port",
            "in": "query",
            "description": "Filter by untagged port name",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_jumbo_enabled",
            "in": "query",
            "description": "Filter by jumbo enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_voice_enabled",
            "in": "query",
            "description": "Filter by voice enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "is_igmp_enabled",
            "in": "query",
            "description": "Filter by igmp enabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the vlan to be queried",
            "required": false,
            "type": "string"
          },
          {
            "name": "primary_vlan_id",
            "in": "query",
            "description": "Primary Vlan Id of the vlan to be queried\"",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status of VLAN. Status can be Up/Down",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort parameter may be one of +name, -name",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total vlans",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXSwitchStackVlanList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/poe_detail": {
      "get": {
        "description": "Get switch port poe info\n",
        "operationId": "api.external_controller.get_switch_poe_detail",
        "tags": [
          "Switch"
        ],
        "summary": "Get switch port poe info",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by switch port",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PortPoeInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/poe_detail": {
      "get": {
        "description": "Get switch port poe info for CX switch\n",
        "operationId": "api.external_controller.get_cx_switch_poe_detail",
        "tags": [
          "Switch"
        ],
        "summary": "Get switch port poe info for CX switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by switch port",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXPortPoeInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/poe_details": {
      "get": {
        "description": "Get switch poe info\n",
        "operationId": "api.external_controller.get_switch_poe_details_for_all_ports",
        "tags": [
          "Switch"
        ],
        "summary": "Get switch poe info",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by switch port",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwitchPortsPoeList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/poe_details": {
      "get": {
        "description": "Get switch poe info for CX switch\n",
        "operationId": "api.external_controller.get_cx_switch_poe_details_for_all_ports",
        "tags": [
          "Switch"
        ],
        "summary": "Get switch poe info for CX switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by switch port",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXSwitchPortsPoeList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/vsx": {
      "get": {
        "description": "Get switch vsx info for CX switch\n",
        "operationId": "api.external_controller.get_switch_vsx_detail",
        "tags": [
          "Switch"
        ],
        "summary": "Get switch vsx info for CX switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Filter by switch serial",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/VSXInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/bandwidth_usage": {
      "get": {
        "description": "Get switches bandwidth usage over a time period. You can only specify one of group, label, serial and stack_id\nparameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_bandwidth_usage",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Bandwidth Usage",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by Switch serial",
            "required": false,
            "type": "string"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/bandwidth_usage/topn": {
      "get": {
        "description": "Get top N Switches details over a time period. You can only specify one of group, label and stack_id parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n",
        "operationId": "api.external_controller.get_bandwidth_usage_topn",
        "tags": [
          "Switch"
        ],
        "summary": "Top N Switches",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "name": "stack_id",
            "in": "query",
            "description": "Filter by Switch stack_id",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Required top N Switch count. Default is 5 and maximum is 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TopNSwitchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}": {
      "get": {
        "description": "Get Switch details\n",
        "operationId": "api.external_controller.get_switch",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SwitchDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete Switch\n",
        "operationId": "api.external_controller.delete_switch",
        "tags": [
          "Switch"
        ],
        "summary": "Delete Switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/ports": {
      "get": {
        "description": "Get switch ports details.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_switch_ports",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Ports Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "slot",
            "in": "query",
            "description": "Slot name of the ports to be queried {For chassis type switches only}.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SWPortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/ports": {
      "get": {
        "description": "Get ports details for CX switch\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_cx_switch_ports",
        "tags": [
          "Switch"
        ],
        "summary": "Get ports details for CX switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "name": "slot",
            "in": "query",
            "description": "Slot name of the ports to be queried {For chassis type switches only}.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXPortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/chassis_info": {
      "get": {
        "description": "Get switch chassis details for chassis type switches.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n",
        "operationId": "api.external_controller.get_chassis_info",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Chassis Details",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ChassisInfo"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/ports/bandwidth_usage": {
      "get": {
        "description": "Get switch ports bandwidth usage over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_switch_ports_bandwidth_usage",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Ports Bandwidth Usage",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_uplink",
            "in": "query",
            "description": "Show usage for Uplink ports alone",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/ports/bandwidth_usage": {
      "get": {
        "description": "Get switch ports bandwidth usage over a time period for CX switch\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_cx_switch_ports_bandwidth_usage",
        "tags": [
          "Switch"
        ],
        "summary": "Ports Bandwidth Usage for CX Switch",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_uplink",
            "in": "query",
            "description": "Show usage for Uplink ports alone",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BandwidthList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switches/{serial}/ports/errors": {
      "get": {
        "description": "Get switch ports in and out errors over a time period.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_ports_errors",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Ports Errors",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port",
            "required": false,
            "type": "string"
          },
          {
            "name": "error",
            "in": "query",
            "description": "Filter by 'in' or 'out' error",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ErrorsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switches/{serial}/ports/errors": {
      "get": {
        "description": "Get switch ports in and out errors over a time period for CX switch\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.get_cx_ports_errors",
        "tags": [
          "Switch"
        ],
        "summary": "CX Switch Ports Errors",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "description": "Serial number of switch to be queried",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "name": "port",
            "in": "query",
            "description": "Filter by Port",
            "required": false,
            "type": "string"
          },
          {
            "name": "error",
            "in": "query",
            "description": "Filter by 'in' or 'out' error",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ErrorsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switch_stacks/{stack_id}/ports": {
      "get": {
        "description": "Get the Port details for a given stack_id\n",
        "operationId": "api.external_controller.get_stack_ports",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Stack Port Details",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by Switch stack_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SWPortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/cx_switch_stacks/{stack_id}/ports": {
      "get": {
        "description": "Get the Port details for a given stack_id for CX Switch\n",
        "operationId": "api.external_controller.get_cx_stack_ports",
        "tags": [
          "Switch"
        ],
        "summary": "CX Switch Stack Port Details",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by Switch stack_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CXStackPortList"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switch_stacks": {
      "get": {
        "description": "List Switch Stacks\n",
        "operationId": "api.external_controller.get_switch_stacks",
        "tags": [
          "Switch"
        ],
        "summary": "List Switch Stacks",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "description": "Filter by stack hostname",
            "type": "string",
            "required": false
          },
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/StackList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/switch_stacks/{stack_id}": {
      "get": {
        "description": "Get Switch Stack details\n",
        "operationId": "api.external_controller.get_switch_stack",
        "tags": [
          "Switch"
        ],
        "summary": "Switch Stack Details",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by Switch stack_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/StackDetail"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete the stack and associated switches\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n",
        "operationId": "api.external_controller.delete_switch_stack",
        "tags": [
          "Switch"
        ],
        "summary": "Delete Switch Stack",
        "parameters": [
          {
            "name": "stack_id",
            "in": "path",
            "description": "Filter by Switch stack_id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ErrorsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v1/events": {
      "get": {
        "deprecated": true,
        "description": "Get a list of events. You can only specify one of group, swarm_id, label, serial, macaddr parameters.\nPossible error_codes for the error responses are\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_events",
        "tags": [
          "Events"
        ],
        "summary": "(Deprecated) List Events",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by switch serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "Filter by event type",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_number",
            "in": "query",
            "description": "Filter by event number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Filter by event level",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_description",
            "in": "query",
            "description": "Filter by event description",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_category",
            "in": "query",
            "description": "Filter by event category",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by client MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are number, level",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total events",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/EventList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/monitoring/v2/events": {
      "get": {
        "description": "Get a list of events.Possible error_codes for the error responses are\n\n1. 0001 - General Error.\n2. 0002 - Validation Error. Out of Range value for a query parameter.\n3. 0003 - Validation Error. Unsupported query combination\n4. 0004 - Validation Error. Invalid value for a query parameter\n",
        "operationId": "api.external_controller.get_events_v2",
        "tags": [
          "Events"
        ],
        "summary": "List Events",
        "parameters": [
          {
            "$ref": "#/parameters/group"
          },
          {
            "$ref": "#/parameters/swarm_id"
          },
          {
            "$ref": "#/parameters/label"
          },
          {
            "$ref": "#/parameters/from_timestamp"
          },
          {
            "$ref": "#/parameters/to_timestamp"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "name": "macaddr",
            "in": "query",
            "description": "Filter by client MAC address",
            "required": false,
            "type": "string"
          },
          {
            "name": "bssid",
            "in": "query",
            "description": "Filter by bssid",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_mac",
            "in": "query",
            "description": "Filter by device_mac",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "Filter by hostname",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "Filter by device type. It is either ACCESS POINT, SWITCH, GATEWAY or CLIENT",
            "required": false,
            "type": "string",
            "enum": [
              "ACCESS POINT",
              "SWITCH",
              "GATEWAY",
              "CLIENT"
            ]
          },
          {
            "name": "sort",
            "enum": [
              "-timestamp",
              "+timestamp"
            ],
            "default": "-timestamp",
            "in": "query",
            "description": "Sort by desc/asc using -timestamp/+timestamp. Default is '-timestamp'",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "Filter by site name",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by switch serial number",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Filter by event level",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_description",
            "in": "query",
            "description": "Filter by event description",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "Filter by event type",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to be returned. Valid fields are number, level",
            "required": false,
            "type": "string"
          },
          {
            "name": "calculate_total",
            "in": "query",
            "description": "Whether to calculate total events",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/EventList_v2"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Request-size limit exceeded"
          },
          "417": {
            "description": "Request-size limit exceeded"
          },
          "429": {
            "description": "API Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "required": [
        "service_name",
        "error_code",
        "description"
      ],
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Service Name",
          "example": "Monitoring"
        },
        "error_code": {
          "type": "string",
          "description": "Error code",
          "example": 3
        },
        "description": {
          "type": "string",
          "description": "Error description",
          "example": "Missing required field"
        }
      }
    },
    "Radio": {
      "type": "object",
      "required": [
        "macaddr",
        "index",
        "status",
        "band",
        "radio_name",
        "radio_type",
        "spatial_stream"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Radio MAC address",
          "example": "a1:b2:ce:d4:5h:1e"
        },
        "index": {
          "type": "integer",
          "description": "Radio number within an AP",
          "example": 0
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "band": {
          "type": "integer",
          "description": "Radio band",
          "example": 1
        },
        "channel": {
          "type": "string",
          "description": "Radio channel",
          "example": "33e"
        },
        "tx_power": {
          "type": "integer",
          "description": "Radio TX power",
          "example": 1000
        },
        "utilization": {
          "type": "integer",
          "description": "Radio channel utilization",
          "example": 200
        },
        "mode": {
          "type": "integer",
          "description": "Radio mode"
        },
        "radio_type": {
          "type": "string",
          "description": "Radio type",
          "example": "802.11ax"
        },
        "spatial_stream": {
          "type": "string",
          "description": "Spatial stream",
          "example": "4x4:4"
        },
        "radio_name": {
          "type": "string",
          "description": "Radio name",
          "example": "RADIO 2.4 GHz"
        }
      }
    },
    "VpnTunnel": {
      "type": "object",
      "required": [
        "peer_name",
        "peer_tun_ip",
        "tunnel_ip",
        "type",
        "status",
        "active",
        "uptime",
        "crypto_type",
        "profile_name",
        "tunnel_name"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Primary or Backup tunnel.",
          "example": "Primary"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "active": {
          "type": "boolean",
          "description": "Tunnel is active or not.",
          "example": true
        },
        "uptime": {
          "type": "integer",
          "description": "Timestamp at which the VPN came up",
          "example": 1523815129
        },
        "crypto_type": {
          "type": "string",
          "description": "Encryption for the tunnel.",
          "example": "WPA2 Encription"
        },
        "peer_name": {
          "type": "string",
          "description": "FQDN/ip of the peer.",
          "example": "1.2.3.4"
        },
        "peer_tun_ip": {
          "type": "string",
          "description": "Peer tunnel ip.",
          "example": "1.2.3.4"
        },
        "tunnel_ip": {
          "type": "string",
          "description": "Device internal tunnel IP",
          "example": "10.2.3.0"
        },
        "profile_name": {
          "type": "string",
          "description": "Tunnel profile Name",
          "example": "default"
        },
        "tunnel_name": {
          "type": "string",
          "description": "Tunnel Name",
          "example": "default"
        }
      }
    },
    "VpnTunnelList": {
      "type": "object",
      "required": [
        "tunnels"
      ],
      "properties": {
        "tunnels": {
          "type": "array",
          "description": "List of tunnels",
          "example": [],
          "items": {
            "$ref": "#/definitions/VpnTunnel"
          }
        }
      }
    },
    "GetTunnelUsage": {
      "type": "object",
      "required": [
        "swarm_id",
        "tunnel_index",
        "tunnel_name"
      ],
      "properties": {
        "swarm_id": {
          "type": "string",
          "description": "Swarm ID to which AP belongs to",
          "example": "jgftr7i3t9980807iuhuieryr"
        },
        "tunnel_index": {
          "description": "Tunnel index",
          "example": "0 or 1",
          "type": "integer"
        },
        "tunnel_name": {
          "description": "Tunnel name .",
          "type": "string",
          "example": "default, test-tunnel, etc"
        },
        "from_timestamp": {
          "type": "integer",
          "description": "Need information from this timestamp. Timestamp is epoch in seconds. Default is current timestamp minus 3 hours"
        },
        "to_timestamp": {
          "type": "integer",
          "description": "Need information to this timestamp. Timestamp is epoch in seconds. Default is current timestamp"
        }
      }
    },
    "AP": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "swarm_id",
        "group_name"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "AP serial number",
          "example": "CN12345"
        },
        "name": {
          "type": "string",
          "description": "AP Name",
          "example": "AP-345"
        },
        "macaddr": {
          "type": "string",
          "description": "AP MAC address",
          "example": "a1:23:4d:c4:de:4r"
        },
        "swarm_id": {
          "type": "string",
          "description": "Swarm ID to which AP belongs to",
          "example": "jgftr7i3t9980807iuhuieryr"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which AP belongs to",
          "example": "group_abc"
        },
        "ap_group": {
          "type": "string",
          "description": "AP group name to which AP belongs to",
          "example": "ap_group"
        },
        "cluster_id": {
          "type": "string",
          "description": "SerialNo of the controller the AP belongs to",
          "example": "CL123456"
        },
        "ap_deployment_mode": {
          "type": "string",
          "description": "Deployment mode of the AP",
          "example": "IAP"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Status"
        },
        "ip_address": {
          "type": "string",
          "description": "AP IP address",
          "example": "1.2.3.4"
        },
        "model": {
          "type": "string",
          "description": "AP model number",
          "example": "AP-345"
        },
        "firmware_version": {
          "type": "string",
          "description": "AP firmware version",
          "example": "7.3.0.1-4356"
        },
        "swarm_master": {
          "type": "boolean",
          "description": "Whether AP is the swarm master",
          "example": true
        },
        "client_count": {
          "type": "integer",
          "description": "Clients connected to AP. Valid only when calculate_client_count is specified",
          "example": 3
        },
        "ssid_count": {
          "type": "integer",
          "description": "SSIDs supported by this AP. Valid only when calculate_ssid_count is specified",
          "example": 16
        },
        "labels": {
          "type": "array",
          "description": "list labels assigned to AP",
          "example": [],
          "items": {
            "type": "string",
            "example": "label1"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned to AP",
          "example": null
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current AP CPU utilization",
          "example": 56
        },
        "uptime": {
          "type": "integer",
          "description": "AP uptime in seconds",
          "example": 36000
        },
        "down_reason": {
          "type": "string",
          "description": "Reason for Down AP",
          "example": "Access Point is disconnected from active controller"
        },
        "last_modified": {
          "type": "integer",
          "description": "AP last modified time",
          "example": 435677890
        },
        "mem_total": {
          "type": "integer",
          "description": "AP total memory",
          "example": 20
        },
        "mem_free": {
          "type": "integer",
          "description": "AP free memory",
          "example": 10
        },
        "gateway_cluster_id": {
          "type": "integer",
          "description": "Gateway cluster ID",
          "example": 1
        },
        "gateway_cluster_name": {
          "type": "string",
          "description": "Gateway cluster name",
          "example": "ClusterA"
        },
        "radios": {
          "type": "array",
          "description": "List of AP radios",
          "example": [],
          "items": {
            "$ref": "#/definitions/Radio"
          }
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the AP",
          "example": "1.1.1.1"
        },
        "subnet_mask": {
          "type": "string",
          "description": "IP Subnet mask"
        },
        "mesh_role": {
          "type": "string",
          "description": "AP mesh role"
        },
        "secondary_controller_serial": {
          "type": "string",
          "description": "Serial number of the secondary controller"
        },
        "secondary_controller_hostname": {
          "type": "string",
          "description": "Hostname of the secondary controller"
        },
        "notes": {
          "type": "string",
          "description": "Notes of an AP"
        },
        "swarm_name": {
          "type": "string",
          "description": "Name of the swarm to which AP belongs"
        },
        "controller_name": {
          "type": "string",
          "description": "Name of the controller to which AP belongs"
        }
      }
    },
    "APList": {
      "type": "object",
      "required": [
        "count",
        "aps"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of APs in the list",
          "example": 4
        },
        "total": {
          "type": "integer",
          "description": "Total APs. Valid when calculate_total is passed in query parameters",
          "example": 10
        },
        "aps": {
          "type": "array",
          "description": "List of APs",
          "example": [],
          "items": {
            "$ref": "#/definitions/AP"
          }
        }
      }
    },
    "ClientMobilityTrailList": {
      "type": "object",
      "required": [
        "count",
        "trails"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of transitions",
          "example": 2
        },
        "total": {
          "type": "integer",
          "description": "Total transitions. Valid when calculate_total is passed in query parameters",
          "example": 4
        },
        "trails": {
          "type": "array",
          "description": "List of client mobility trails",
          "example": [],
          "items": {
            "$ref": "#/definitions/ClientMobilityTrailDetail"
          }
        }
      }
    },
    "ClientMobilityTrailDetail": {
      "type": "object",
      "required": [
        "ap_name",
        "ap_serial",
        "ts"
      ],
      "properties": {
        "ap_name": {
          "type": "string",
          "description": "AP name",
          "example": "AP-345"
        },
        "ts": {
          "type": "integer",
          "description": "Transition time",
          "example": 46543210
        },
        "ap_serial": {
          "type": "string",
          "description": "AP Serial number",
          "example": "AP12345"
        },
        "previous_ap_name": {
          "type": "string",
          "description": "AP name",
          "example": "AP-344"
        },
        "roaming_type": {
          "type": "string",
          "description": "Roaming type",
          "example": "11r",
          "enum": [
            "11r",
            "okc",
            802.11
          ]
        },
        "latency": {
          "type": "integer",
          "description": "Roaming latency in milliseconds",
          "example": 50
        },
        "band": {
          "type": "string",
          "description": "Client radio band",
          "example": "5 Ghz"
        },
        "network": {
          "type": "string",
          "description": "Client's ESSID",
          "example": "5Gz_0_1"
        },
        "bssid": {
          "type": "string",
          "description": "BSSID mac address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "rssi": {
          "type": "integer",
          "description": "RSSI",
          "example": -75
        },
        "channel": {
          "type": "string",
          "description": "Radio channel",
          "example": "33e"
        }
      }
    },
    "EthernetDetail": {
      "type": "object",
      "required": [
        "macaddr",
        "index",
        "name",
        "admin_state",
        "operational_state",
        "type",
        "link_speed",
        "duplex_mode"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "MAC address",
          "example": "1w:2a:d3:t4:55:6g"
        },
        "index": {
          "type": "integer",
          "description": "Ethernet number within an AP",
          "example": 2
        },
        "name": {
          "type": "string",
          "description": "interface name",
          "example": "Interface"
        },
        "admin_state": {
          "type": "string",
          "description": "interface admin status",
          "example": "Up"
        },
        "operational_state": {
          "type": "string",
          "description": "interface operational status",
          "example": "Up"
        },
        "type": {
          "type": "string",
          "description": "Interface type",
          "example": "wired"
        },
        "link_speed": {
          "type": "string",
          "description": "Link speed",
          "example": "Auto"
        },
        "duplex_mode": {
          "type": "string",
          "description": "Duplex mode",
          "example": "Auto"
        }
      }
    },
    "RadioDetail": {
      "type": "object",
      "required": [
        "macaddr",
        "index",
        "status",
        "role",
        "channel",
        "band",
        "tx_power",
        "noise_floor",
        "utilization",
        "radio_type"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Radio MAC address",
          "example": "1a:2c:de:3f:5t:ad"
        },
        "index": {
          "type": "integer",
          "description": "Radio number within an AP",
          "example": 1
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "role": {
          "type": "string",
          "description": "Radio role",
          "example": "Access"
        },
        "channel": {
          "type": "string",
          "description": "Radio channel",
          "example": "33e"
        },
        "band": {
          "type": "integer",
          "description": "Radio band",
          "example": 0
        },
        "tx_power": {
          "type": "integer",
          "description": "Radio TX power",
          "example": 3456
        },
        "noise_floor": {
          "type": "integer",
          "description": "Radio noise floor",
          "example": 120
        },
        "utilization": {
          "type": "integer",
          "description": "Radio channel utilization",
          "example": 80
        },
        "radio_type": {
          "type": "string",
          "description": "Radio type",
          "example": "5.0 Ghz"
        }
      }
    },
    "APDetail": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "swarm_id",
        "group_name",
        "status",
        "ip_address",
        "model",
        "firmware_version",
        "swarm_master",
        "cpu_utilization",
        "uptime",
        "mem_total",
        "mem_free",
        "mesh_role",
        "mode",
        "radios",
        "client_count",
        "ssid_count",
        "ethernets",
        "modem_connected",
        "current_uplink_inuse"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "AP serial number",
          "example": "Ap123456"
        },
        "name": {
          "type": "string",
          "description": "AP Name",
          "example": "AP-345"
        },
        "macaddr": {
          "type": "string",
          "description": "AP MAC address",
          "example": "1a:2s:3d:f3:4f:ge"
        },
        "swarm_id": {
          "type": "string",
          "description": "Swarm ID to which AP belongs to",
          "example": "gjhkhguljhlkj12jh767687807676"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which AP belongs to",
          "example": "group1"
        },
        "ap_group": {
          "type": "string",
          "description": "AP group name to which AP belongs to",
          "example": "ap_group2"
        },
        "cluster_id": {
          "type": "string",
          "description": "SerialNo of the controller the AP belongs to",
          "example": "CN345677"
        },
        "ap_deployment_mode": {
          "type": "string",
          "description": "Deployment mode of the AP",
          "example": "IAP"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Down"
        },
        "ip_address": {
          "type": "string",
          "description": "AP IP address",
          "example": "1.1.1.1"
        },
        "model": {
          "type": "string",
          "description": "AP model number",
          "example": "AP-345"
        },
        "firmware_version": {
          "type": "string",
          "description": "AP firmware version",
          "example": "8.3.0.0_63709"
        },
        "swarm_master": {
          "type": "boolean",
          "description": "Whether AP is the swarm master",
          "example": true
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current AP CPU utilization",
          "example": 56
        },
        "uptime": {
          "type": "integer",
          "description": "AP uptime in seconds",
          "example": 3600
        },
        "down_reason": {
          "type": "string",
          "description": "Reason for Down AP",
          "example": "Disconnected from active controller"
        },
        "last_modified": {
          "type": "integer",
          "description": "AP last modified time",
          "example": 45670089
        },
        "mem_total": {
          "type": "integer",
          "description": "AP total memory",
          "example": 80
        },
        "mem_free": {
          "type": "integer",
          "description": "AP free memory",
          "example": 20
        },
        "mesh_role": {
          "type": "string",
          "description": "AP mesh role",
          "example": "Unknown"
        },
        "mode": {
          "type": "string",
          "description": "AP operating mode",
          "example": "Auto"
        },
        "radios": {
          "type": "array",
          "description": "List of AP radios",
          "example": [],
          "items": {
            "$ref": "#/definitions/RadioDetail"
          }
        },
        "client_count": {
          "type": "integer",
          "description": "Clients connected to AP",
          "example": 3
        },
        "ssid_count": {
          "type": "integer",
          "description": "SSIDs supported by this AP",
          "example": 16
        },
        "ethernets": {
          "type": "array",
          "description": "List of Ethernets",
          "example": [],
          "items": {
            "$ref": "#/definitions/EthernetDetail"
          }
        },
        "modem_connected": {
          "type": "boolean",
          "description": "True if modem is plugged in, False if modem is not plugged-in/not supported.",
          "example": true
        },
        "current_uplink_inuse": {
          "type": "string",
          "description": "Uplink type in use by this AP.",
          "example": "Ethernet"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the AP",
          "example": "1.1.1.1"
        },
        "ip_address_v6": {
          "type": "string",
          "description": "Ip address of the AP in ip v6 format",
          "example": "12df:34tf:76f4:11ad:de45:12ea:11af:31dr"
        },
        "subnet_mask": {
          "type": "string",
          "description": "IP Subnet mask"
        },
        "site_name": {
          "type": "string",
          "description": "Name of the site of AP"
        },
        "swarm_name": {
          "type": "string",
          "description": "Name of the swarm the AP belongs to",
          "example": "swarm_01"
        },
        "controller_name": {
          "type": "string",
          "description": "Name of the controller the AP belongs to",
          "example": "controller_01"
        },
        "sys_location": {
          "type": "string",
          "description": "System location as provided in the controller. Not applicable for IAPs",
          "example": "Hardware Lab"
        },
        "sys_contact": {
          "type": "string",
          "description": "System contact as provided in the controller. Not applicable for IAPs",
          "example": "Hardwarelab.contact@noreply.com"
        }
      }
    },
    "Network": {
      "type": "object",
      "required": [
        "essid",
        "security",
        "type"
      ],
      "properties": {
        "essid": {
          "type": "string",
          "description": "Network Name",
          "example": "Network 1"
        },
        "security": {
          "type": "string",
          "description": "WLAN security type(Open, WPA2-Personal, etc)",
          "example": "Open"
        },
        "type": {
          "type": "string",
          "description": "WLAN type(Guest, Employee, etc)",
          "example": "Guest"
        },
        "client_count": {
          "type": "integer",
          "description": "Clients connected to SSID. Valid only when calculate_client_count is specified",
          "example": 4
        }
      }
    },
    "NetworkList": {
      "type": "object",
      "required": [
        "count",
        "networks"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of networks in the list",
          "example": 2
        },
        "networks": {
          "type": "array",
          "description": "List of Networks",
          "example": [],
          "items": {
            "$ref": "#/definitions/Network"
          }
        }
      }
    },
    "Client": {
      "type": "object",
      "required": [
        "macaddr"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "client1"
        },
        "ip_address": {
          "type": "string",
          "description": "Client IP address",
          "example": "10.29.31.251"
        },
        "username": {
          "type": "string",
          "description": "Client's username",
          "example": "user"
        },
        "os_type": {
          "type": "string",
          "description": "Client OS type",
          "example": "Linux"
        },
        "connection": {
          "type": "string",
          "description": "Client connection type",
          "example": "802.11AC"
        },
        "associated_device": {
          "type": "string",
          "description": "Client's associated AP/Switch serial",
          "example": "CNDTK5104D"
        },
        "encryption_method": {
          "type": "string",
          "description": "Encryption method used by client",
          "example": "UNKNOWN"
        },
        "signal_strength": {
          "type": "integer",
          "description": "Client signal strength",
          "example": 3
        },
        "signal_db": {
          "type": "integer",
          "description": "Client signal db",
          "example": 65
        },
        "snr": {
          "type": "integer",
          "description": "Client SNR",
          "example": 4
        },
        "speed": {
          "type": "integer",
          "description": "Client Speed",
          "example": 866
        },
        "usage": {
          "type": "integer",
          "description": "Total of received and transmitted data for last 5 mins.",
          "example": 29063323
        },
        "health": {
          "type": "integer",
          "description": "Client health as computed by controller - a value between 0 to 100",
          "example": 0
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which client belongs to",
          "example": "dual_5GHz"
        },
        "swarm_id": {
          "type": "string",
          "description": "Client's swarm ID",
          "example": "1523bca0014e94ed844d7dbde138b556993207f71af39d19df"
        },
        "network": {
          "type": "string",
          "description": "Client's ESSID",
          "example": "5Gz_0_1"
        },
        "radio_mac": {
          "type": "string",
          "description": "AP radio MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "manufacturer": {
          "type": "string",
          "description": "Client device manufacturer",
          "example": "HTC Corporation"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN",
          "example": 3333
        },
        "labels": {
          "type": "array",
          "description": "Client's list of labels",
          "example": [],
          "items": {
            "type": "string",
            "example": "Mix_both"
          }
        },
        "site": {
          "type": "string",
          "description": "Client's site",
          "example": null
        },
        "associated_device_name": {
          "type": "string",
          "description": "Connected device name",
          "example": "IAP1"
        }
      }
    },
    "UnifiedClient": {
      "type": "object",
      "required": [
        "macaddr"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "client_type": {
          "type": "string",
          "description": "Client type wired or wireless",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "client1"
        },
        "ip_address": {
          "type": "string",
          "description": "Client IP address",
          "example": "10.29.31.251"
        },
        "ip_v6_address": {
          "type": "string",
          "description": "Client IP V6 address",
          "example": "10.29.31.251"
        },
        "failure_reason": {
          "type": "string",
          "description": "Client Failure reason",
          "example": "Client Timeout"
        },
        "failure_stage": {
          "type": "string",
          "description": "Client Failure stage",
          "example": "DOT1X"
        },
        "username": {
          "type": "string",
          "description": "Client's username",
          "example": "user"
        },
        "user_role": {
          "type": "string",
          "description": "Client's user role",
          "example": "admin"
        },
        "os_type": {
          "type": "string",
          "description": "Client OS type",
          "example": "Linux"
        },
        "client_family": {
          "type": "string",
          "description": "Client Family type",
          "example": "Linux"
        },
        "client_category": {
          "type": "string",
          "description": "Client Category type",
          "example": "Linux"
        },
        "connection": {
          "type": "string",
          "description": "Client connection type",
          "example": "802.11AC"
        },
        "associated_device": {
          "type": "string",
          "description": "Client's associated AP/Switch/Gateway serial",
          "example": "CNDTK5104D"
        },
        "associated_device_mac": {
          "type": "string",
          "description": "Client's associated AP/Switch/Gateway mac",
          "example": "c8:b5:ad:c3:b2:05"
        },
        "connected_device_Type": {
          "type": "string",
          "description": "connected device type AP/SWITCH/GATEWAY",
          "example": "IAP"
        },
        "encryption_method": {
          "type": "string",
          "description": "Encryption method used by client",
          "example": "UNKNOWN"
        },
        "signal_strength": {
          "type": "integer",
          "description": "Client signal strength. Valid when show_signal_db is passed as true in query parameters.",
          "example": 3
        },
        "signal_db": {
          "type": "integer",
          "description": "Client signal db. Valid when show_signal_db is passed as true in query parameters.",
          "example": 65
        },
        "snr": {
          "type": "integer",
          "description": "Client SNR",
          "example": 4
        },
        "speed": {
          "type": "integer",
          "description": "Client Speed",
          "example": 866
        },
        "maxspeed": {
          "type": "integer",
          "description": "Client maximum speed",
          "example": 10000
        },
        "usage": {
          "type": "integer",
          "description": "Total of received and transmitted data for last 3 hours by default. Providing timerange, will fetch usage for that timerange. Valid when show_usage is passed as true in query parameters.",
          "example": 29063323
        },
        "health": {
          "type": "integer",
          "description": "Client health as computed by controller - a value between 0 to 100",
          "example": 0
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which client belongs to",
          "example": "dual_5GHz"
        },
        "group_id": {
          "type": "integer",
          "description": "Group id to which client belongs to",
          "example": 13
        },
        "swarm_id": {
          "type": "string",
          "description": "Client's swarm ID",
          "example": "1523bca0014e94ed844d7dbde138b556993207f71af39d19df"
        },
        "network": {
          "type": "string",
          "description": "Client's ESSID",
          "example": "5Gz_0_1"
        },
        "radio_mac": {
          "type": "string",
          "description": "AP radio MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "radio_number": {
          "type": "integer",
          "description": "AP radio number to which the client is associated",
          "example": 1
        },
        "manufacturer": {
          "type": "string",
          "description": "Client device manufacturer. Valid when show_manufacturer is passed as true in query parameters.",
          "example": "HTC Corporation"
        },
        "bssid": {
          "type": "string",
          "description": "Client bssid",
          "example": "HTC"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN",
          "example": 3333
        },
        "labels": {
          "type": "array",
          "description": "Client's list of labels",
          "example": [],
          "items": {
            "type": "string",
            "example": "Mix_both"
          }
        },
        "label_id": {
          "type": "array",
          "description": "Client's list of label ids",
          "example": [],
          "items": {
            "type": "integer",
            "example": 12
          }
        },
        "site": {
          "type": "string",
          "description": "Client's site",
          "example": null
        },
        "interface_mac": {
          "type": "string",
          "description": "Device Interface MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "interface_port": {
          "type": "string",
          "description": "Device Interface port to which the client is associated",
          "example": 1235
        },
        "authentication_type": {
          "type": "string",
          "description": "Client authentication type",
          "example": "WPA2 Enterprise"
        },
        "band": {
          "type": "string",
          "description": "Wireless Client radio band",
          "example": "5 Ghz"
        },
        "associated_device_name": {
          "type": "string",
          "description": "Connected device name",
          "example": "IAP1"
        }
      }
    },
    "WiredClient": {
      "type": "object",
      "required": [
        "macaddr"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "android-9d2b90d607cc0e84"
        },
        "ip_address": {
          "type": "string",
          "description": "Client IP address",
          "example": "10.29.31.251"
        },
        "username": {
          "type": "string",
          "description": "Client's username",
          "example": "user"
        },
        "associated_device": {
          "type": "string",
          "description": "Client's associated AP/Switch serial",
          "example": "CNDTK5104D"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which client belongs to",
          "example": "dual_5GHz"
        },
        "interface_mac": {
          "type": "string",
          "description": "Device Interface MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "interface_port": {
          "type": "string",
          "description": "Device Interface port to which the client is associated",
          "example": 1235
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN",
          "example": 3333
        },
        "associated_device_name": {
          "type": "string",
          "description": "Connected device name",
          "example": "IAP1"
        }
      }
    },
    "ClientList": {
      "type": "object",
      "required": [
        "count",
        "clients"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of clients in the list",
          "example": 3
        },
        "total": {
          "type": "integer",
          "description": "Total clients. Valid when calculate_total is passed in query parameters",
          "example": 4
        },
        "clients": {
          "type": "array",
          "description": "List of clients",
          "example": [],
          "items": {
            "$ref": "#/definitions/Client"
          }
        }
      }
    },
    "UnifiedClientList": {
      "type": "object",
      "required": [
        "count",
        "clients"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of clients in the list",
          "example": 3
        },
        "last_client_mac": {
          "type": "string",
          "description": "last processed client mac sorted by client_mac_address",
          "example": "00:00:00:00:00:01"
        },
        "total": {
          "type": "integer",
          "description": "Total clients. Valid when calculate_total is passed in query parameters",
          "example": 4
        },
        "clients": {
          "type": "array",
          "description": "List of clients",
          "example": [],
          "items": {
            "$ref": "#/definitions/UnifiedClient"
          }
        }
      }
    },
    "WiredClientList": {
      "type": "object",
      "required": [
        "count",
        "clients"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of clients in the list",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total clients. Valid when calculate_total is passed in query parameters",
          "example": 5
        },
        "clients": {
          "type": "array",
          "description": "List of clients",
          "example": [],
          "items": {
            "$ref": "#/definitions/WiredClient"
          }
        }
      }
    },
    "ClientDetail": {
      "type": "object",
      "required": [
        "macaddr",
        "name",
        "ip_address",
        "username",
        "associated_device",
        "group_name",
        "swarm_id",
        "network",
        "user_role",
        "manufacturer",
        "os_type",
        "connection",
        "speed",
        "maxspeed",
        "signal_strength",
        "signal_db",
        "snr",
        "channel",
        "band",
        "labels",
        "site",
        "radio_mac",
        "vlan",
        "radio_number"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "name"
        },
        "ip_address": {
          "type": "string",
          "description": "Client IP address",
          "example": "10.29.31.251"
        },
        "username": {
          "type": "string",
          "description": "Client's username",
          "example": "user"
        },
        "associated_device": {
          "type": "string",
          "description": "Client's associated AP/Switch serial",
          "example": "CB29870987"
        },
        "encryption_method": {
          "type": "string",
          "description": "Encryption method used by client",
          "example": "UNKNOWN"
        },
        "usage": {
          "type": "integer",
          "description": "Total of received and transmitted data for last 5 mins.",
          "example": 28199089
        },
        "health": {
          "type": "integer",
          "description": "Client health as computed by controller - a value between 0 to 100",
          "example": 0
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which client belongs to",
          "example": "dual_5GHz"
        },
        "swarm_id": {
          "type": "string",
          "description": "Client's swarm ID",
          "example": "1523bca0014e94ed844d7dbde138b556993207f71af39d19df"
        },
        "network": {
          "type": "string",
          "description": "Client's ESSID",
          "example": "5Gz_0_1"
        },
        "user_role": {
          "type": "string",
          "description": "Client's user role",
          "example": "admin"
        },
        "manufacturer": {
          "type": "string",
          "description": "Client device manufacturer",
          "example": "HTC Corporation"
        },
        "os_type": {
          "type": "string",
          "description": "Client OS type",
          "example": "Linux"
        },
        "connection": {
          "type": "string",
          "description": "Client connection type",
          "example": "Wired"
        },
        "speed": {
          "type": "integer",
          "description": "Client speed",
          "example": 444
        },
        "maxspeed": {
          "type": "integer",
          "description": "Client maximum speed",
          "example": 10000
        },
        "signal_strength": {
          "type": "integer",
          "description": "Client signal strength",
          "example": 55
        },
        "signal_db": {
          "type": "integer",
          "description": "Client signal DB",
          "example": 12
        },
        "snr": {
          "type": "integer",
          "description": "Client SNR",
          "example": 123
        },
        "channel": {
          "type": "string",
          "description": "Client radio channel",
          "example": "33e"
        },
        "band": {
          "type": "string",
          "description": "Client radio band",
          "example": "5 Ghz"
        },
        "labels": {
          "type": "array",
          "description": "Client's list of labels",
          "example": [],
          "items": {
            "type": "string",
            "example": "label1"
          }
        },
        "site": {
          "type": "string",
          "description": "Client's site",
          "example": null
        },
        "radio_mac": {
          "type": "string",
          "description": "AP radio MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN",
          "example": 3333
        },
        "radio_number": {
          "type": "integer",
          "description": "AP radio number to which the client is associated",
          "example": 1
        }
      }
    },
    "WiredClientDetail": {
      "type": "object",
      "required": [
        "macaddr",
        "name",
        "ip_address",
        "username",
        "associated_device",
        "group_name",
        "user_role",
        "labels",
        "site",
        "last_connection_time",
        "interface_mac",
        "manufacturer",
        "device_type",
        "vlan"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "clien1"
        },
        "ip_address": {
          "type": "string",
          "description": "Client IP address",
          "example": "10.29.31.251"
        },
        "username": {
          "type": "string",
          "description": "Client's username",
          "example": "user"
        },
        "associated_device": {
          "type": "string",
          "description": "Client's associated AP/Switch serial",
          "example": "CD1765767"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which client belongs to",
          "example": "dual_5GHz"
        },
        "user_role": {
          "type": "string",
          "description": "Client's user role",
          "example": "admin"
        },
        "labels": {
          "type": "array",
          "description": "Client's list of labels",
          "example": [],
          "items": {
            "type": "string",
            "example": "Wired"
          }
        },
        "site": {
          "type": "string",
          "description": "Client's site",
          "example": null
        },
        "last_connection_time": {
          "type": "integer",
          "description": "Client's last connection time",
          "example": 4528199089
        },
        "interface_mac": {
          "type": "string",
          "description": "Device Interface MAC address to which the client is associated",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "manufacturer": {
          "type": "string",
          "description": "Client device manufacturer",
          "example": "HTC Corporation"
        },
        "device_type": {
          "type": "string",
          "description": "Client device or OS type",
          "example": "Android"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN",
          "example": 3333
        },
        "authentication_type": {
          "type": "string",
          "description": "Client authentication type",
          "example": "WPA2 Enterprise"
        }
      }
    },
    "Bandwidth": {
      "type": "object",
      "required": [
        "timestamp",
        "rx_data_bytes",
        "tx_data_bytes"
      ],
      "properties": {
        "timestamp": {
          "type": "number",
          "description": "Sample timestamp in epoch",
          "example": 1524202896
        },
        "rx_data_bytes": {
          "type": "number",
          "description": "RX data bytes for the timestamp",
          "example": 6000
        },
        "tx_data_bytes": {
          "type": "number",
          "description": "TX data bytes for the timestamp",
          "example": 6000
        }
      }
    },
    "BandwidthList": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of samples",
          "example": 6
        },
        "interval": {
          "type": "string",
          "description": "Sample interval. It can be one of \"5minutes\", \"1hour\", \"1day\" and \"1week\"",
          "example": "5minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of data samples",
          "items": {
            "$ref": "#/definitions/Bandwidth"
          }
        }
      }
    },
    "GatewayPortErrorsRoot": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of data points",
          "example": 1
        },
        "interval": {
          "type": "string",
          "description": "Interval between the data points",
          "example": "5 minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of the port error datapoints",
          "items": {
            "$ref": "#/definitions/GatewayPortErrors"
          }
        }
      }
    },
    "GatewayPortErrors": {
      "type": "object",
      "required": [
        "out_collision",
        "in_crc",
        "err_frames",
        "timestamp"
      ],
      "properties": {
        "out_collision": {
          "type": "number",
          "example": 4
        },
        "in_crc": {
          "type": "number",
          "example": 6
        },
        "err_frames": {
          "type": "number",
          "example": 8
        },
        "timestamp": {
          "type": "integer",
          "format": "epoch",
          "description": "Timestamp of the sample",
          "example": 1620365700
        }
      }
    },
    "UplinksDistribution": {
      "type": "object",
      "required": [
        "link_tag",
        "count"
      ],
      "properties": {
        "link_tag": {
          "type": "string",
          "description": "Uplink name",
          "example": "name"
        },
        "count": {
          "type": "number",
          "description": "Number of each uplink",
          "example": 6
        }
      }
    },
    "UplinksDistributionList": {
      "type": "object",
      "required": [
        "count",
        "result"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of uplinks",
          "example": 6
        },
        "result": {
          "type": "array",
          "description": "List of uplinks distribution",
          "example": [],
          "items": {
            "$ref": "#/definitions/UplinksDistribution"
          }
        }
      }
    },
    "Errors": {
      "type": "object",
      "required": [
        "timestamp",
        "in_errors_pkts",
        "out_errors_pkts",
        "in_discards_pkts",
        "out_discards_pkts",
        "in_runt_pkts",
        "in_giant_pkts",
        "in_crc_pkts",
        "in_throttle_pkts",
        "out_collision_pkts",
        "out_late_collision_pkts",
        "out_multiple_collision_pkts",
        "out_throttle_pkts",
        "out_deferred_pkts"
      ],
      "properties": {
        "timestamp": {
          "type": "number",
          "description": "Sample timestamp in epoch",
          "example": 1524202896
        },
        "in_errors_pkts": {
          "type": "number",
          "description": "In errors for the timestamp",
          "example": 80
        },
        "out_errors_pkts": {
          "type": "number",
          "description": "Out errors for the timestamp",
          "example": 20
        },
        "in_discards_pkts": {
          "type": "number",
          "description": "In discards for the timestamp",
          "example": 44
        },
        "out_discards_pkts": {
          "type": "number",
          "description": "Out discards for the timestamp",
          "example": 44
        },
        "in_runt_pkts": {
          "type": "number",
          "description": "In runts for the timestamp",
          "example": 12
        },
        "in_giant_pkts": {
          "type": "number",
          "description": "In giants for the timestamp",
          "example": 100
        },
        "in_crc_pkts": {
          "type": "number",
          "description": "In crc for the timestamp",
          "example": 20
        },
        "in_throttle_pkts": {
          "type": "number",
          "description": "In throttle for the timestamp",
          "example": 100
        },
        "out_collision_pkts": {
          "type": "number",
          "description": "Out collision for the timestamp",
          "example": 100
        },
        "out_late_collision_pkts": {
          "type": "number",
          "description": "Out late collision for the timestamp",
          "example": 100
        },
        "out_multiple_collision_pkts": {
          "type": "number",
          "description": "Out multiple collision for the timestamp",
          "example": 100
        },
        "out_throttle_pkts": {
          "type": "number",
          "description": "Out throttle for the timestamp",
          "example": 100
        },
        "out_deferred_pkts": {
          "type": "number",
          "description": "Out deferred for the timestamp",
          "example": 100
        }
      }
    },
    "ErrorsList": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of samples",
          "example": 6
        },
        "interval": {
          "type": "string",
          "description": "Sample interval. It can be one of \"5minutes\", \"1hour\", \"1day\" and \"1week\"",
          "example": "5minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of data samples",
          "example": [],
          "items": {
            "$ref": "#/definitions/Errors"
          }
        }
      }
    },
    "TopNAp": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "rx_data_bytes",
        "tx_data_bytes"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "AP serial",
          "example": "CD123456"
        },
        "name": {
          "type": "string",
          "description": "AP name",
          "example": "AP1"
        },
        "rx_data_bytes": {
          "type": "number",
          "description": "AP RX data bytes",
          "example": 98700
        },
        "tx_data_bytes": {
          "type": "number",
          "description": "AP TX data bytes",
          "example": 89700
        }
      }
    },
    "TopNSwarm": {
      "type": "object",
      "required": [
        "id",
        "name",
        "rx_data_bytes",
        "tx_data_bytes"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Swarm ID",
          "example": "987iup878dsnlkjdhaksdhg890jhlkjhiuyhiuy"
        },
        "name": {
          "type": "string",
          "description": "Swarm Name",
          "example": "swarm1"
        },
        "rx_data_bytes": {
          "type": "number",
          "description": "Swarm RX data bytes",
          "example": 45454
        },
        "tx_data_bytes": {
          "type": "number",
          "description": "Swarm TX data bytes",
          "example": 45466
        }
      }
    },
    "TopNSwarmClients": {
      "type": "object",
      "required": [
        "id",
        "name",
        "clients_count"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Swarm ID",
          "example": "987iup878dsnlkjdhaksdhg890jhlkjhiuyhiuy"
        },
        "name": {
          "type": "string",
          "description": "Swarm Name",
          "example": "swarm1"
        },
        "clients_count": {
          "type": "number",
          "description": "Number of clients per swarm",
          "example": 4
        }
      }
    },
    "TopNApList": {
      "type": "object",
      "required": [
        "count",
        "aps"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of APs",
          "example": 6
        },
        "aps": {
          "type": "array",
          "description": "List of APs",
          "example": [],
          "items": {
            "$ref": "#/definitions/TopNAp"
          }
        }
      }
    },
    "TopNSwarmList": {
      "type": "object",
      "required": [
        "count",
        "swarms"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Swarms",
          "example": 6
        },
        "swarms": {
          "type": "array",
          "description": "List of Swarms",
          "example": [],
          "items": {
            "$ref": "#/definitions/TopNSwarm"
          }
        }
      }
    },
    "TopNSwarmListClient": {
      "type": "object",
      "required": [
        "count",
        "swarms"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Swarms",
          "example": 5
        },
        "swarms": {
          "type": "array",
          "description": "List of Swarms",
          "example": [],
          "items": {
            "$ref": "#/definitions/TopNSwarmClients"
          }
        }
      }
    },
    "TopNSwitch": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "rx_data_bytes",
        "tx_data_bytes"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Switch serial",
          "example": "SW769786"
        },
        "name": {
          "type": "string",
          "description": "Switch name",
          "example": "SWITCH_123"
        },
        "rx_data_bytes": {
          "type": "number",
          "description": "Switch RX data bytes",
          "example": 36256
        },
        "tx_data_bytes": {
          "type": "number",
          "description": "Switch TX data bytes",
          "example": 345345
        }
      }
    },
    "TopNSwitchList": {
      "type": "object",
      "required": [
        "count",
        "switches"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Switches",
          "example": 6
        },
        "switches": {
          "type": "array",
          "description": "List of Switches",
          "example": [],
          "items": {
            "$ref": "#/definitions/TopNSwitch"
          }
        }
      }
    },
    "TopNClient": {
      "type": "object",
      "required": [
        "macaddr",
        "name",
        "rx_data_bytes",
        "tx_data_bytes"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "Client MAC address",
          "example": "c8:b5:ad:c3:b2:04'"
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "example": "user1"
        },
        "rx_data_bytes": {
          "type": "number",
          "description": "Client RX data bytes",
          "example": 700
        },
        "tx_data_bytes": {
          "type": "number",
          "description": "Client TX data bytes",
          "example": 800
        }
      }
    },
    "TopNClientList": {
      "type": "object",
      "required": [
        "count",
        "clients"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Clients",
          "example": 6
        },
        "clients": {
          "type": "array",
          "description": "List of clients",
          "example": [],
          "items": {
            "$ref": "#/definitions/TopNClient"
          }
        }
      }
    },
    "ClientCount": {
      "type": "object",
      "required": [
        "timestamp",
        "client_count"
      ],
      "properties": {
        "timestamp": {
          "type": "number",
          "description": "Sample timestamp in epoch",
          "example": 698768760
        },
        "client_count": {
          "type": "integer",
          "description": "Clients count for the timestamp",
          "example": 6
        }
      }
    },
    "ClientCountList": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of samples",
          "example": 6
        },
        "interval": {
          "type": "string",
          "description": "Sample interval. It can be one of \"5minutes\", \"1hour\", \"1day\" and  \"1week\"",
          "example": "5minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of data samples",
          "example": [],
          "items": {
            "$ref": "#/definitions/ClientCount"
          }
        }
      }
    },
    "ApBssidList": {
      "type": "object",
      "required": [
        "count",
        "aps"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of APs in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total APs. Valid when calculate_total is passed in query parameters",
          "example": 5
        },
        "aps": {
          "type": "array",
          "description": "List of AP BSSIDs",
          "example": [],
          "items": {
            "$ref": "#/definitions/APBssid"
          }
        }
      }
    },
    "APBssid": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "swarm_id",
        "radio_bssids"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "AP serial number",
          "example": "AP78979"
        },
        "name": {
          "type": "string",
          "description": "AP Name",
          "example": "AP1"
        },
        "macaddr": {
          "type": "string",
          "description": "AP MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "swarm_id": {
          "type": "string",
          "description": "Swarm ID to which AP belongs to",
          "example": "1523bca0014e94ed844d7dbde138b556993207f71af39d19df"
        },
        "radio_bssids": {
          "type": "array",
          "description": "List of BSSIDs",
          "example": [],
          "items": {
            "$ref": "#/definitions/RadioBssid"
          }
        }
      }
    },
    "RadioBssid": {
      "type": "object",
      "required": [
        "index",
        "macaddr",
        "bssids"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "description": "Radio index in AP",
          "example": 0
        },
        "macaddr": {
          "type": "string",
          "description": "Radio MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "bssids": {
          "type": "array",
          "description": "List of BSSIDs",
          "example": [],
          "items": {
            "$ref": "#/definitions/Bssid"
          }
        }
      }
    },
    "Bssid": {
      "type": "object",
      "required": [
        "macaddr",
        "essid"
      ],
      "properties": {
        "macaddr": {
          "type": "string",
          "description": "BSSID mac address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "essid": {
          "type": "string",
          "description": "essid of bssid mac address",
          "example": "ESSID1"
        }
      }
    },
    "RFSummaryList": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of samples",
          "example": 6
        },
        "interval": {
          "type": "string",
          "description": "Sample interval. It can be one of \"5minutes\", \"1hour\", \"1day\" and  \"1week\"",
          "example": "5minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of data samples",
          "example": [],
          "items": {
            "$ref": "#/definitions/RFSummary"
          }
        }
      }
    },
    "RFSummary": {
      "type": "object",
      "required": [
        "timestamp",
        "noise_floor",
        "utilization"
      ],
      "properties": {
        "timestamp": {
          "type": "number",
          "description": "Sample timestamp in epoch",
          "example": 470786800
        },
        "noise_floor": {
          "type": "integer",
          "description": "Noise floor for the timestamp",
          "example": 34
        },
        "utilization": {
          "type": "integer",
          "description": "Utilization for the timestamp",
          "example": 80
        }
      }
    },
    "Swarm": {
      "type": "object",
      "required": [
        "swarm_id",
        "name",
        "group_name"
      ],
      "properties": {
        "swarm_id": {
          "type": "string",
          "description": "Swarm ID",
          "example": "1523bca0014e94ed844d7dbde138b556993207f71af39d19df"
        },
        "name": {
          "type": "string",
          "description": "Swarm Name",
          "example": "Swarm1"
        },
        "group_name": {
          "type": "string",
          "description": "Group Name to which the Swarm belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the Swarm",
          "example": "10.29.31.251"
        },
        "ip_address": {
          "type": "string",
          "description": "Ip address of the Swarm",
          "example": "10.29.31.251"
        },
        "firmware_Version": {
          "type": "string",
          "description": "Firmware version of the Swarm",
          "example": "7.3.0.4-0.0098"
        }
      }
    },
    "SwarmList": {
      "type": "object",
      "required": [
        "count",
        "swarms"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Swarms in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total Swarms. Valid when calculate_total is passed in query parameters",
          "example": 7
        },
        "swarms": {
          "type": "array",
          "description": "List of Swarms",
          "example": [],
          "items": {
            "$ref": "#/definitions/Swarm"
          }
        }
      }
    },
    "SiteList": {
      "type": "object",
      "required": [
        "count",
        "sites"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of sites in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total sites. Valid when calculate_total is passed in query parameters",
          "example": 1,
          "format": "int32"
        },
        "sites": {
          "type": "array",
          "description": "List of sites",
          "example": [],
          "items": {
            "$ref": "#/definitions/Site"
          }
        }
      }
    },
    "Site": {
      "type": "object",
      "required": [
        "site_id",
        "site_name"
      ],
      "properties": {
        "site_id": {
          "type": "integer",
          "format": "int32",
          "description": "Site ID",
          "example": 9
        },
        "site_name": {
          "type": "string",
          "description": "Site name",
          "example": "site1"
        }
      }
    },
    "UpdateSite": {
      "type": "object",
      "required": [
        "site_name"
      ],
      "properties": {
        "site_name": {
          "type": "string",
          "description": "Site Name",
          "example": "site1"
        },
        "site_address": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Address",
              "example": "3970 Rivermark Plaza"
            },
            "city": {
              "type": "string",
              "description": "City Name",
              "example": "Santa Clara"
            },
            "state": {
              "type": "string",
              "description": "State Name",
              "example": "California"
            },
            "country": {
              "type": "string",
              "description": "Country Name",
              "example": "United States"
            },
            "zipcode": {
              "type": "string",
              "description": "Zipcode",
              "example": "95053"
            }
          }
        },
        "geolocation": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "latitude": {
              "type": "string",
              "description": "Latitude (in the range of -90 and 90)",
              "example": "38.8951"
            },
            "longitude": {
              "type": "string",
              "description": "Longitude (in the range of -180 and 180)",
              "example": "-77.0364"
            }
          }
        }
      }
    },
    "UpdateSiteResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Site name",
          "example": "site1"
        },
        "address": {
          "type": "string",
          "description": "Address",
          "example": "3970 Rivermark Plaza"
        },
        "city": {
          "type": "string",
          "description": "City Name",
          "example": "Santa Clara"
        },
        "state": {
          "type": "string",
          "description": "State Name",
          "example": "California"
        },
        "country": {
          "type": "string",
          "description": "Country Name",
          "example": "United States"
        },
        "zipcode": {
          "type": "string",
          "description": "Zipcode",
          "example": "95053"
        },
        "latitude": {
          "type": "string",
          "description": "Latitude",
          "example": "38.8951"
        },
        "longitude": {
          "type": "string",
          "description": "Longitude",
          "example": "-77.0364"
        }
      }
    },
    "CreateSite": {
      "type": "object",
      "required": [
        "site_name"
      ],
      "properties": {
        "site_name": {
          "type": "string",
          "description": "Site Name",
          "example": "site1"
        },
        "site_address": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Address",
              "example": "3970 Rivermark Plaza"
            },
            "city": {
              "type": "string",
              "description": "City Name",
              "example": "Santa Clara"
            },
            "state": {
              "type": "string",
              "description": "State Name",
              "example": "California"
            },
            "country": {
              "type": "string",
              "description": "Country Name",
              "example": "United States"
            },
            "zipcode": {
              "type": "string",
              "description": "Zipcode",
              "example": "95053"
            }
          }
        },
        "geolocation": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "latitude": {
              "type": "string",
              "description": "Latitude (in the range of -90 and 90)",
              "example": "38.8951"
            },
            "longitude": {
              "type": "string",
              "description": "Longitude (in the range of -180 and 180)",
              "example": "-77.0364"
            }
          }
        }
      }
    },
    "LabelList": {
      "type": "object",
      "required": [
        "count",
        "labels"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of labels in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total labels. Valid when calculate_total is passed in query parameters",
          "example": 1,
          "format": "int32"
        },
        "labels": {
          "type": "array",
          "description": "List of labels",
          "example": [],
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "Label": {
      "type": "object",
      "required": [
        "label_id",
        "category_id",
        "label_name",
        "category_name"
      ],
      "properties": {
        "category_id": {
          "type": "integer",
          "description": "Label category ID",
          "example": 1
        },
        "category_name": {
          "type": "string",
          "description": "Label category name",
          "example": "label1"
        },
        "label_id": {
          "type": "integer",
          "format": "int32",
          "description": "Label ID",
          "example": 1
        },
        "label_name": {
          "type": "string",
          "description": "Label name",
          "example": "label1"
        }
      }
    },
    "CreateLabel": {
      "type": "object",
      "required": [
        "category_id",
        "label_name"
      ],
      "properties": {
        "category_id": {
          "type": "integer",
          "description": "Label category ID",
          "example": 1
        },
        "label_name": {
          "type": "string",
          "description": "Label name",
          "example": "label1"
        }
      }
    },
    "UpdateLabel": {
      "type": "object",
      "required": [
        "label_name"
      ],
      "properties": {
        "label_name": {
          "type": "string",
          "example": "label1"
        }
      }
    },
    "LabelAssociation": {
      "type": "object",
      "required": [
        "device_id",
        "device_type",
        "label_id"
      ],
      "properties": {
        "device_id": {
          "description": "Device ID. In the case IAP or SWITCH, it is device serial number",
          "example": "AD12412345",
          "type": "string"
        },
        "device_type": {
          "description": "Device type. It is either IAP, SWITCH or CONTROLLER",
          "example": "IAP",
          "type": "string",
          "default": "IAP",
          "enum": [
            "IAP",
            "SWITCH",
            "CONTROLLER"
          ]
        },
        "label_id": {
          "description": "Label ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LabelUnassociation": {
      "type": "object",
      "required": [
        "device_id",
        "label_id"
      ],
      "properties": {
        "device_id": {
          "description": "Device ID. In the case IAP or SWITCH, it is device serial number",
          "example": "AD12412345",
          "type": "string"
        },
        "device_type": {
          "description": "Device type. It is either IAP, SWITCH or CONTROLLER",
          "example": "IAP",
          "type": "string",
          "default": "IAP"
        },
        "label_id": {
          "description": "Label ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LabelAssociationList": {
      "type": "object",
      "required": [
        "device_type",
        "label_id",
        "device_ids"
      ],
      "properties": {
        "label_id": {
          "description": "Label ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "device_type": {
          "description": "Device type. It is either IAP, SWITCH or CONTROLLER",
          "example": "IAP",
          "type": "string",
          "default": "IAP",
          "enum": [
            "IAP",
            "SWITCH",
            "CONTROLLER"
          ]
        },
        "device_ids": {
          "description": "List of device serial numbers of the devices to which the label has to be un/associated with. A maximum of 5000 device serials are allowed at once. ",
          "type": "array",
          "items": {
            "type": "string",
            "example": "CN001"
          },
          "example": [
            "CN001",
            "CN002",
            "CN003"
          ]
        }
      }
    },
    "BulkAssociationResponse": {
      "type": "object",
      "required": [
        "success",
        "failed"
      ],
      "properties": {
        "success": {
          "description": "List of device serials numbers to which label was succesully un/associated with",
          "type": "object",
          "properties": {
            "device_id": {
              "description": "Device serial to which the label was un/associated with",
              "type": "string",
              "example": "CN001"
            }
          }
        },
        "failed": {
          "description": "List of device serials which for which label un/association failed with reasons",
          "type": "object",
          "properties": {
            "device_id": {
              "description": "Device serial for which label un/association failed",
              "type": "string",
              "example": "CN001"
            },
            "reason": {
              "description": "Reason due to which device label un/association failed",
              "type": "string",
              "example": "LABEL_ERR_LABEL_ID_ALREADY_ASSOCIATED"
            }
          }
        }
      }
    },
    "SiteAssociation": {
      "type": "object",
      "required": [
        "device_id",
        "device_type",
        "site_id"
      ],
      "properties": {
        "device_id": {
          "description": "Device ID. In the case IAP or SWITCH, it is device serial number",
          "example": "AD12412345",
          "type": "string"
        },
        "device_type": {
          "description": "Device type. It is either IAP, SWITCH or CONTROLLER",
          "example": "IAP",
          "type": "string",
          "default": "IAP",
          "enum": [
            "IAP",
            "SWITCH",
            "CONTROLLER"
          ]
        },
        "site_id": {
          "description": "Site ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SiteAssociationList": {
      "type": "object",
      "required": [
        "device_type",
        "site_id",
        "device_ids"
      ],
      "properties": {
        "site_id": {
          "description": "Site ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "device_type": {
          "description": "Device type. It is either IAP, SWITCH or CONTROLLER",
          "example": "IAP",
          "type": "string",
          "default": "IAP",
          "enum": [
            "IAP",
            "SWITCH",
            "CONTROLLER"
          ]
        },
        "device_ids": {
          "description": "List of device serial numbers of the devices to which the site has to be un/associated with. A maximum of 5000 device serials are allowed at once. ",
          "type": "array",
          "items": {
            "type": "string",
            "example": "CN001"
          },
          "example": [
            "CN001",
            "CN002",
            "CN003"
          ]
        }
      }
    },
    "BulkSiteAssociationResponse": {
      "type": "object",
      "required": [
        "success",
        "failed"
      ],
      "properties": {
        "success": {
          "description": "List of device serials numbers to which site was succesully un/associated with",
          "type": "object",
          "properties": {
            "device_id": {
              "description": "Device serial to which the site was un/associated with",
              "type": "string",
              "example": "CN001"
            }
          }
        },
        "failed": {
          "description": "List of device serials which for which site un/association failed with reasons",
          "type": "object",
          "properties": {
            "device_id": {
              "description": "Device serial for which site un/association failed",
              "type": "string",
              "example": "CN001"
            },
            "reason": {
              "description": "Reason due to which device site un/association failed",
              "type": "string",
              "example": "SITE_ERR_SITE_ID_ALREADY_ASSOCIATED"
            }
          }
        }
      }
    },
    "LabelCategoryList": {
      "type": "object",
      "required": [
        "count",
        "categories"
      ],
      "properties": {
        "total": {
          "description": "Total categories. Valid when calculate_total is passed in query parameters",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Number of label categories in the list",
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "categories": {
          "type": "array",
          "example": [],
          "items": {
            "$ref": "#/definitions/LabelCategory"
          }
        }
      }
    },
    "LabelCategory": {
      "type": "object",
      "required": [
        "category_id",
        "category_name"
      ],
      "properties": {
        "category_id": {
          "description": "Label category ID",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "category_name": {
          "description": "Label category name",
          "example": "cat_name",
          "type": "string"
        }
      }
    },
    "Switch": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "group_name"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Switch ID",
          "example": "SD1898"
        },
        "name": {
          "type": "string",
          "description": "Switch Name",
          "example": "Swiatch1"
        },
        "macaddr": {
          "type": "string",
          "description": "Switch Mac",
          "example": "c8:b5:ad:c3:b2:04'"
        },
        "model": {
          "type": "string",
          "description": "Switch Model",
          "example": "SWITCH_1"
        },
        "group_name": {
          "type": "string",
          "description": "Group Name to which the Switch belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the Switch",
          "example": "10.29.31.251"
        },
        "ip_address": {
          "type": "string",
          "description": "Ip address of the Switch",
          "example": "10.29.31.251"
        },
        "firmware_version": {
          "type": "string",
          "description": "Firmware version of the Switch",
          "example": "7.3.0.4-0.0098"
        },
        "client_count": {
          "type": "integer",
          "description": "Clients connected to Switch. Valid only when calculate_client_count is specified",
          "example": 6
        },
        "labels": {
          "type": "array",
          "description": "list of labels assigned to Switch",
          "example": [],
          "items": {
            "type": "string"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned to Switch",
          "example": null
        },
        "uplink_ports": {
          "type": "array",
          "description": "list of uplink ports assigned to Switch",
          "example": [],
          "items": {
            "type": "string",
            "example": 3333
          }
        },
        "uptime": {
          "type": "integer",
          "description": "Switch uptime",
          "example": 87687687
        },
        "max_power": {
          "type": "integer",
          "description": "Power supplied to switch.",
          "example": 10000
        },
        "power_consumption": {
          "type": "integer",
          "description": "Power consumed by the switch",
          "example": 10
        },
        "fan_speed": {
          "type": "string",
          "description": "Fan speed of the switch",
          "example": "Ok"
        },
        "temperature": {
          "type": "string",
          "description": "Switch Temperature",
          "example": 10
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current Switch CPU utilization percentage.",
          "example": 10
        },
        "mem_total": {
          "type": "integer",
          "description": "Switch total memory",
          "example": 75559424
        },
        "mem_free": {
          "type": "integer",
          "description": "Switch free memory",
          "example": 75559424
        },
        "switch_role": {
          "type": "string",
          "description": "Standalone/commander/member",
          "example": "Commander"
        },
        "stack_id": {
          "type": "string",
          "description": "stack_id if present",
          "example": "ST8978"
        },
        "stack_member_id": {
          "type": "string",
          "description": "member id if the switch is in stack",
          "example": 8
        },
        "poe_consumption": {
          "type": "string",
          "description": "Switch PoE consumption",
          "example": 97
        }
      }
    },
    "SwitchListSingle": {
      "type": "object",
      "required": [
        "firmware_version",
        "group_name",
        "ip_address",
        "labels",
        "macaddr",
        "model",
        "name",
        "public_ip_address",
        "serial",
        "site",
        "status",
        "uplink_ports",
        "usage"
      ],
      "properties": {
        "firmware_version": {
          "type": "string",
          "description": "Firmware version of the switch",
          "example": "16.10.0003"
        },
        "group_name": {
          "type": "string",
          "description": "Group name of the switch",
          "example": "unprovisioned"
        },
        "labels": {
          "type": "array",
          "description": "Label names of the switch",
          "items": {
            "type": "string",
            "example": "Label1"
          }
        },
        "ip_address": {
          "type": "string",
          "description": "IP Address of the switch",
          "example": "10.22.38.55"
        },
        "macaddr": {
          "type": "string",
          "description": "Mac Address of the switch",
          "example": "54:80:28:60:2d:a0"
        },
        "model": {
          "type": "string",
          "description": "Model of the switch",
          "example": "Aruba3810M-24G-PoE+-1-slot Switch(JL073A)"
        },
        "name": {
          "type": "string",
          "description": "hostname of the switch",
          "example": "Aruba-3810M-24G-PoEP-1-slot"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public IP address of the switch",
          "example": "10.22.38.55"
        },
        "serial": {
          "type": "string",
          "description": "serial number of the switch",
          "example": "CN80HKW4Z9"
        },
        "site": {
          "type": "string",
          "description": "site name of the switch",
          "example": "site1"
        },
        "status": {
          "type": "string",
          "description": "Status of the switch (Up/Down)",
          "enum": [
            "Up",
            "Down"
          ]
        },
        "uplink_ports": {
          "type": "array",
          "description": "uplink ports of the switch",
          "items": {
            "properties": {
              "port": {
                "type": "string",
                "description": "uplink port name",
                "example": "1/1"
              }
            }
          }
        },
        "usage": {
          "type": "integer",
          "description": "Switch usage",
          "example": 56456456
        },
        "stack_id": {
          "type": "string",
          "description": "stack_id if device id is member of Stack else null",
          "example": "01008030-e0cd2100"
        },
        "switch_type": {
          "type": "string",
          "description": "type of switch, AOS-S or AOS-CX",
          "example": "AOS-S"
        }
      }
    },
    "SwitchList": {
      "type": "object",
      "required": [
        "count",
        "switches"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Switches in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total Switches. Valid when calculate_total is passed in query parameters",
          "example": 4
        },
        "switches": {
          "type": "array",
          "description": "List of Switches",
          "items": {
            "$ref": "#/definitions/SwitchListSingle"
          }
        }
      }
    },
    "SwitchDetail": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "model",
        "group_name",
        "status",
        "public_ip_address",
        "ip_address",
        "firmware_version",
        "default_gateway",
        "uptime",
        "updated_at",
        "device_mode",
        "total_clients",
        "usage",
        "power_consumption",
        "fan_speed",
        "temperature",
        "labels",
        "site",
        "uplink_ports",
        "chassis_type",
        "cpu_utilization",
        "mem_total",
        "mem_free",
        "poe_consumption",
        "switch_type"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Switch ID",
          "example": "HP-2920-24G-PoEP"
        },
        "name": {
          "type": "string",
          "description": "Switch Name",
          "example": "HP-2920-24G-PoEP"
        },
        "macaddr": {
          "type": "string",
          "description": "Switch MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "model": {
          "type": "string",
          "description": "Switch Model",
          "example": "HP2920-24G-PoE+ Switch(J9727A)"
        },
        "group_name": {
          "type": "string",
          "description": "Group Name to which the Switch belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the Switch",
          "example": "10.29.31.251"
        },
        "ip_address": {
          "type": "string",
          "description": "Ip address of the Switch",
          "example": "10.29.31.251"
        },
        "firmware_version": {
          "type": "string",
          "description": "Firmware version of the Switch",
          "example": "7.3.0.4-0.0098"
        },
        "default_gateway": {
          "type": "string",
          "description": "Default gateway of the switch",
          "example": "10.8.29.254"
        },
        "uptime": {
          "type": "integer",
          "description": "Switch uptime",
          "example": 418814421
        },
        "updated_at": {
          "type": "integer",
          "description": "Timestamp at which the switch data was last updated in Central",
          "example": 1518814421
        },
        "device_mode": {
          "type": "integer",
          "description": "Switch Mode",
          "example": 0
        },
        "total_clients": {
          "type": "integer",
          "description": "Number of Switch Clients",
          "example": 2
        },
        "usage": {
          "type": "integer",
          "description": "Switch usage",
          "example": 56456456
        },
        "max_power": {
          "type": "integer",
          "description": "Power supplied to switch.",
          "example": 10
        },
        "power_consumption": {
          "type": "integer",
          "description": "Power consumed by the switch",
          "example": 19
        },
        "fan_speed": {
          "type": "string",
          "description": "Fan speed of the switch",
          "example": "Ok"
        },
        "temperature": {
          "type": "string",
          "description": "Switch Temperature",
          "example": "Ok"
        },
        "labels": {
          "type": "array",
          "description": "list of labels assigned to Switch",
          "example": [],
          "items": {
            "type": "string",
            "example": "label"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned to Switch",
          "example": null
        },
        "uplink_ports": {
          "type": "array",
          "description": "list of uplink ports of the Switch",
          "example": [],
          "items": {
            "type": "string",
            "example": 44
          }
        },
        "chassis_type": {
          "type": "boolean",
          "description": "Is switch of chassis type.",
          "example": true
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current Switch CPU utilization percentage.",
          "example": 19
        },
        "mem_total": {
          "type": "integer",
          "description": "Switch total memory",
          "example": 34234
        },
        "mem_free": {
          "type": "integer",
          "description": "Switch free memory",
          "example": 23423
        },
        "nae_aggr_status": {
          "type": "string",
          "description": "Switch NAE aggregate status. This is only applicable for CX switches",
          "example": "CRITICAL"
        },
        "poe_consumption": {
          "type": "string",
          "description": "Switch PoE consumption",
          "example": 3
        },
        "switch_type": {
          "type": "string",
          "description": "Type of the switch.For CX Switches type is ArubaCX where as for PVOS switches type is ArubaSwitch. MAAS stands for Aruba MAS Switches.",
          "enum": [
            "ArubaCX",
            "ArubaSwitch",
            "MAAS"
          ]
        },
        "stack_id": {
          "type": "string",
          "description": "stack_id if device id is member of Stack else null",
          "example": "01008030-e0cd2100"
        }
      }
    },
    "StackList": {
      "type": "object",
      "required": [
        "count",
        "stacks"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Stacks in the list",
          "example": 6
        },
        "total": {
          "type": "integer",
          "description": "Total Stacks. Valid when calculate_total is passed in query parameters",
          "example": 4
        },
        "stacks": {
          "type": "array",
          "description": "List of Stacks",
          "items": {
            "$ref": "#/definitions/StackDetail"
          }
        }
      }
    },
    "StackDetail": {
      "type": "object",
      "required": [
        "id",
        "switch_type",
        "status",
        "mac"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Switch stack_id",
          "example": "ST903545"
        },
        "status": {
          "type": "string",
          "description": "Stack status Up or Down",
          "example": "Up"
        },
        "topology": {
          "type": "string",
          "description": "topology of the stack",
          "example": "Chain"
        },
        "split_policy": {
          "type": "string",
          "description": "split policy string",
          "example": "Standby"
        },
        "group": {
          "type": "string",
          "description": "Group Name to which the Stack belongs to",
          "example": "dual_5GHz"
        },
        "mac": {
          "type": "string",
          "description": "Stack MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "public_ip_address": {
          "type": "string",
          "description": "Public Ip address of the Stack",
          "example": "10.29.31.251"
        },
        "location": {
          "type": "string",
          "description": "location of the stack",
          "example": "Chennai"
        },
        "name": {
          "type": "string",
          "description": "Stack hostname",
          "example": "1.12.3.4"
        },
        "domain_id": {
          "type": "integer",
          "description": "Domain ID of VSF stack",
          "example": 1
        },
        "switch_type": {
          "type": "string",
          "description": "Type of the switch.For CX Switches type is ArubaCX where as for PVOS switches type is ArubaSwitch. MAAS stands for Aruba MAS Switches.",
          "enum": [
            "ArubaCX",
            "ArubaSwitch",
            "MAAS"
          ]
        }
      }
    },
    "StackPortList": {
      "type": "object",
      "required": [
        "total_members",
        "member_port_detail"
      ],
      "properties": {
        "total_members": {
          "type": "integer",
          "description": "Number of Members",
          "example": 4
        },
        "member_port_detail": {
          "type": "array",
          "description": "List of Ports for the member",
          "items": {
            "$ref": "#/definitions/MemberPortList"
          }
        }
      }
    },
    "MemberPortList": {
      "type": "object",
      "required": [
        "count",
        "serial",
        "ports"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of ports including stack ports and ports",
          "example": 6
        },
        "serial": {
          "type": "string",
          "description": "Serial of the device",
          "example": "ST756576"
        },
        "ports": {
          "type": "array",
          "description": "List of Ports",
          "items": {
            "$ref": "#/definitions/PortDetail"
          }
        },
        "stack_ports": {
          "type": "array",
          "description": "List of Stack Ports",
          "example": [],
          "items": {
            "$ref": "#/definitions/StackPortDetail"
          }
        }
      }
    },
    "StackPortDetail": {
      "type": "object",
      "required": [
        "port_number",
        "status"
      ],
      "properties": {
        "port_number": {
          "type": "string",
          "description": "Switch Port Number",
          "example": "Port 1"
        },
        "status": {
          "type": "string",
          "description": "Switch Port Status",
          "example": "Up"
        }
      }
    },
    "SWPortDetail": {
      "type": "object",
      "required": [
        "port_number",
        "status",
        "type",
        "mode",
        "vlan",
        "tx_usage",
        "rx_usage",
        "has_poe",
        "poe_state",
        "oper_state",
        "admin_state",
        "speed",
        "mux",
        "trusted",
        "power_consumption",
        "allowed_vlan"
      ],
      "properties": {
        "port_number": {
          "type": "string",
          "description": "Switch Port Number",
          "example": 20
        },
        "status": {
          "type": "string",
          "description": "Switch Port Status",
          "example": "Up"
        },
        "type": {
          "type": "string",
          "description": "Switch Port type",
          "example": "Ethernet"
        },
        "mode": {
          "type": "string",
          "description": "Mode in which Port is operating",
          "example": "Auto"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN.",
          "example": "2.3.4.5"
        },
        "tx_usage": {
          "type": "number",
          "description": "Port Tx Usage",
          "example": 232
        },
        "rx_usage": {
          "type": "number",
          "description": "Port Rx Usage",
          "example": 234
        },
        "has_poe": {
          "type": "boolean",
          "description": "POE Support is present",
          "example": true
        },
        "poe_state": {
          "type": "string",
          "description": "POE State of the port",
          "example": "Down"
        },
        "oper_state": {
          "type": "string",
          "description": "Operational State of the port",
          "example": "Down"
        },
        "admin_state": {
          "type": "string",
          "description": "Admin State of the port",
          "example": "Down"
        },
        "speed": {
          "type": "string",
          "description": "Port Speed Type",
          "example": 1000
        },
        "mux": {
          "type": "boolean",
          "description": "Mux Support is enabled",
          "example": true
        },
        "trusted": {
          "type": "boolean",
          "description": "Trusted Port",
          "example": true
        },
        "power_consumption": {
          "type": "integer",
          "description": "Power consumed by the port",
          "example": 100
        },
        "allowed_vlan": {
          "type": "array",
          "description": "Allowed VLAN.",
          "example": [],
          "items": {
            "type": "integer",
            "example": 3333
          }
        },
        "slot": {
          "type": "string",
          "description": "Module/slot of the port.",
          "example": "slot1"
        },
        "alignment": {
          "type": "string",
          "description": "Alignment of the port.",
          "example": "PA_TOP"
        },
        "internal": {
          "type": "string",
          "description": "If the port is internal/external.",
          "example": "Internal"
        },
        "phy_type": {
          "type": "string",
          "description": "Type of interface.",
          "example": "-"
        },
        "sub_type": {
          "type": "string",
          "description": "Sub-type of interface.",
          "example": "100/1000T"
        },
        "duplex_mode": {
          "type": "string",
          "description": "Duplex mode.",
          "example": "Full"
        },
        "macaddr": {
          "type": "string",
          "description": "Port MAC address.",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "is_uplink": {
          "type": "boolean",
          "description": "if port is uplink port",
          "example": false
        },
        "port": {
          "type": "string",
          "description": "port number",
          "example": 145
        },
        "out_errors": {
          "type": "integer",
          "description": "out errors count",
          "example": 2
        },
        "in_errors": {
          "type": "integer",
          "description": "in errors count",
          "example": 3
        }
      }
    },
    "PortDetail": {
      "type": "object",
      "required": [
        "port_number",
        "status",
        "type",
        "mode",
        "vlan",
        "tx_usage",
        "rx_usage",
        "has_poe",
        "poe_state",
        "oper_state",
        "admin_state",
        "speed",
        "mux",
        "trusted",
        "power_consumption",
        "allowed_vlan"
      ],
      "properties": {
        "port_number": {
          "type": "string",
          "description": "Port Number",
          "example": 20
        },
        "status": {
          "type": "string",
          "description": "Port Status",
          "example": "Up"
        },
        "type": {
          "type": "string",
          "description": "Port type",
          "example": "Ethernet"
        },
        "mode": {
          "type": "string",
          "description": "Mode in which Port is operating",
          "example": "Auto"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN.",
          "example": "2.3.4.5"
        },
        "tx_usage": {
          "type": "number",
          "description": "Port Tx Usage",
          "example": 232
        },
        "rx_usage": {
          "type": "number",
          "description": "Port Rx Usage",
          "example": 234
        },
        "has_poe": {
          "type": "boolean",
          "description": "POE Support is present",
          "example": true
        },
        "poe_state": {
          "type": "string",
          "description": "POE State of the port",
          "example": "Down"
        },
        "oper_state": {
          "type": "string",
          "description": "Operational State of the port",
          "example": "Down"
        },
        "admin_state": {
          "type": "string",
          "description": "Admin State of the port",
          "example": "Down"
        },
        "speed": {
          "type": "string",
          "description": "Port Speed Type",
          "example": 1000
        },
        "mux": {
          "type": "boolean",
          "description": "Mux Support is enabled",
          "example": true
        },
        "trusted": {
          "type": "boolean",
          "description": "Trusted Port",
          "example": true
        },
        "power_consumption": {
          "type": "integer",
          "description": "Power consumed by the port",
          "example": 100
        },
        "allowed_vlan": {
          "type": "array",
          "description": "Allowed VLAN.",
          "example": [],
          "items": {
            "type": "integer",
            "example": 3333
          }
        },
        "slot": {
          "type": "string",
          "description": "Module/slot of the port.",
          "example": "slot1"
        },
        "alignment": {
          "type": "string",
          "description": "Alignment of the port.",
          "example": "PA_TOP"
        },
        "internal": {
          "type": "string",
          "description": "If the port is internal/external.",
          "example": "Internal"
        },
        "phy_type": {
          "type": "string",
          "description": "Type of interface.",
          "example": "-"
        },
        "sub_type": {
          "type": "string",
          "description": "Sub-type of interface.",
          "example": "100/1000T"
        },
        "duplex_mode": {
          "type": "string",
          "description": "Duplex mode.",
          "example": "Full"
        },
        "macaddr": {
          "type": "string",
          "description": "Port MAC address.",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "is_uplink": {
          "type": "boolean",
          "description": "if port is uplink port",
          "example": false
        },
        "port": {
          "type": "string",
          "description": "port number",
          "example": 145
        }
      }
    },
    "CXStackPortList": {
      "type": "object",
      "required": [
        "total_members",
        "member_port_detail"
      ],
      "properties": {
        "total_members": {
          "type": "integer",
          "description": "Number of Members",
          "example": 4
        },
        "member_port_detail": {
          "type": "array",
          "description": "List of Ports for the member",
          "items": {
            "$ref": "#/definitions/CXMemberPortList"
          }
        }
      }
    },
    "CXMemberPortList": {
      "type": "object",
      "required": [
        "count",
        "serial",
        "ports"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of ports including stack ports and ports",
          "example": 6
        },
        "serial": {
          "type": "string",
          "description": "Serial of the device",
          "example": "ST756576"
        },
        "ports": {
          "type": "array",
          "description": "List of Ports",
          "items": {
            "$ref": "#/definitions/CXPortDetail"
          }
        },
        "stack_ports": {
          "type": "array",
          "description": "List of Stack Ports",
          "items": {
            "$ref": "#/definitions/CXStackPortDetail"
          }
        },
        "total": {
          "type": "integer",
          "description": "Number of ports including stack ports and ports",
          "example": 28
        }
      }
    },
    "CXStackPortDetail": {
      "type": "object",
      "required": [
        "port_number",
        "status"
      ],
      "properties": {
        "port_number": {
          "type": "string",
          "description": "Switch Port Number",
          "example": "1/1/25"
        },
        "status": {
          "type": "string",
          "description": "Switch Port Status",
          "example": "Up"
        }
      }
    },
    "CXPortDetail": {
      "type": "object",
      "required": [
        "port",
        "status",
        "type",
        "mode",
        "tx_usage",
        "rx_usage",
        "has_poe",
        "poe_state",
        "oper_state",
        "admin_state",
        "speed",
        "mux",
        "trusted",
        "power_consumption",
        "allowed_vlan"
      ],
      "properties": {
        "port_number": {
          "type": "string",
          "description": "Switch Port Number",
          "example": "1/1/1"
        },
        "status": {
          "type": "string",
          "description": "Switch Port Status",
          "example": "Up"
        },
        "type": {
          "type": "string",
          "description": "Switch Port type",
          "example": "Ethernet"
        },
        "mode": {
          "type": "string",
          "description": "Mode in which Port is operating",
          "example": "Auto"
        },
        "tx_usage": {
          "type": "number",
          "description": "Port Tx Usage",
          "example": 232
        },
        "rx_usage": {
          "type": "number",
          "description": "Port Rx Usage",
          "example": 234
        },
        "has_poe": {
          "type": "boolean",
          "description": "POE Support is present",
          "example": true
        },
        "poe_state": {
          "type": "string",
          "description": "POE State of the port",
          "example": "Down"
        },
        "oper_state": {
          "type": "string",
          "description": "Operational State of the port",
          "example": "Down"
        },
        "admin_state": {
          "type": "string",
          "description": "Admin State of the port",
          "example": "Down"
        },
        "speed": {
          "type": "string",
          "description": "Port Speed Type",
          "example": 1000
        },
        "mux": {
          "type": "boolean",
          "description": "Mux Support is enabled",
          "example": true
        },
        "trusted": {
          "type": "boolean",
          "description": "Trusted Port",
          "example": true
        },
        "power_consumption": {
          "type": "integer",
          "description": "Power consumed by the port",
          "example": 100
        },
        "allowed_vlan": {
          "type": "array",
          "description": "Allowed VLAN.",
          "items": {
            "type": "integer",
            "example": 3333
          }
        },
        "vsx_enabled": {
          "type": "boolean",
          "description": "VSX enabled for switch",
          "example": false
        },
        "intf_state_down_reason": {
          "type": "string",
          "description": "Interface state down reason",
          "example": "Waiting for link"
        },
        "native_vlan": {
          "type": "integer",
          "description": "Native VLAN",
          "example": 2
        },
        "vlan_mode": {
          "type": "string",
          "description": "mode of the vlan",
          "example": "Access"
        },
        "slot": {
          "type": "string",
          "description": "Module/slot of the port.",
          "example": "slot1"
        },
        "alignment": {
          "type": "string",
          "description": "Alignment of the port.",
          "example": "PA_TOP"
        },
        "internal": {
          "type": "string",
          "description": "If the port is internal/external.",
          "example": "Internal"
        },
        "phy_type": {
          "type": "string",
          "description": "Type of interface.",
          "example": "-"
        },
        "sub_type": {
          "type": "string",
          "description": "Sub-type of interface.",
          "example": "100/1000T"
        },
        "duplex_mode": {
          "type": "string",
          "description": "Duplex mode.",
          "example": "Full"
        },
        "macaddr": {
          "type": "string",
          "description": "Port MAC address.",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "is_uplink": {
          "type": "boolean",
          "description": "if port is uplink port",
          "example": false
        },
        "port": {
          "type": "string",
          "description": "port number",
          "example": 145
        }
      }
    },
    "TunnelDetail": {
      "type": "object",
      "required": [
        "map_id",
        "name",
        "status",
        "source_ip",
        "destination_ip",
        "uplink_tag",
        "uplink_port",
        "vlan_id",
        "last_down_reason",
        "connected_uptime"
      ],
      "properties": {
        "map_id": {
          "type": "integer",
          "description": "Tunnel id",
          "example": 89
        },
        "name": {
          "type": "string",
          "description": "Tunnel Name",
          "example": "VPN"
        },
        "status": {
          "type": "string",
          "description": "Tunnel Status",
          "example": "Up"
        },
        "source_ip": {
          "type": "string",
          "description": "Source IP address of the Tunnel",
          "example": "1.2.33.45"
        },
        "destination_ip": {
          "type": "string",
          "description": "Destination IP address of the Tunnel",
          "example": "2.33.45.66"
        },
        "uplink_tag": {
          "type": "integer",
          "description": "Tunnel's Uplink tag",
          "example": 23
        },
        "uplink_port": {
          "type": "string",
          "description": "Tunnel's Uplink port",
          "example": 34
        },
        "vlan_id": {
          "type": "integer",
          "description": "VLAN id",
          "example": 33
        },
        "last_down_reason": {
          "type": "string",
          "description": "Tunnel's last down reason",
          "example": "Disconnected"
        },
        "connected_uptime": {
          "type": "integer",
          "description": "Tunnel uptime in seconds",
          "example": 120
        }
      }
    },
    "SWPortList": {
      "type": "object",
      "required": [
        "count",
        "ports"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of ports",
          "example": 5
        },
        "ports": {
          "type": "array",
          "description": "List of Ports",
          "items": {
            "$ref": "#/definitions/SWPortDetail"
          }
        }
      }
    },
    "PortList": {
      "type": "object",
      "required": [
        "count",
        "ports"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of ports",
          "example": 5
        },
        "ports": {
          "type": "array",
          "description": "List of Ports",
          "items": {
            "$ref": "#/definitions/PortDetail"
          }
        }
      }
    },
    "CXPortList": {
      "type": "object",
      "required": [
        "count",
        "ports"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of ports",
          "example": 5
        },
        "ports": {
          "type": "array",
          "description": "List of Ports",
          "items": {
            "$ref": "#/definitions/CXPortDetail"
          }
        },
        "total": {
          "type": "integer",
          "description": "Number of ports",
          "example": 5
        }
      }
    },
    "TunnelList": {
      "type": "object",
      "required": [
        "total",
        "tunnels"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "description": "Number of tunnels",
          "example": 2
        },
        "tunnels": {
          "type": "array",
          "description": "List of tunnels",
          "example": [],
          "items": {
            "$ref": "#/definitions/TunnelDetail"
          }
        }
      }
    },
    "UplinkDetails": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Uplink"
      }
    },
    "Event": {
      "type": "object",
      "required": [
        "level",
        "number",
        "timestamp",
        "description"
      ],
      "properties": {
        "level": {
          "type": "string",
          "description": "Event level",
          "example": "Critical"
        },
        "number": {
          "type": "number",
          "description": "Event Number",
          "example": 5
        },
        "timestamp": {
          "type": "number",
          "description": "When the event occured. The value is epoch seconds",
          "example": 5765876876
        },
        "description": {
          "type": "string",
          "description": "Event description",
          "example": "An AP detected"
        }
      }
    },
    "EventList": {
      "type": "object",
      "required": [
        "count",
        "events"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of events",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total events. Valid when calculate_total is passed in query parameters",
          "example": 10
        },
        "events": {
          "type": "array",
          "description": "List of events",
          "example": [],
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "EventList_v2": {
      "type": "object",
      "required": [
        "count",
        "events"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of events",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total events. Valid when calculate_total is passed in query parameters",
          "example": 10
        },
        "events": {
          "type": "array",
          "description": "List of events",
          "example": [],
          "items": {
            "$ref": "#/definitions/Event_v2"
          }
        }
      }
    },
    "Event_v2": {
      "type": "object",
      "required": [
        "bssid",
        "client_mac",
        "description",
        "device_mac",
        "device_serial",
        "device_type",
        "event_type",
        "event_uuid",
        "group_name",
        "hostname",
        "labels",
        "number",
        "sites",
        "timestamp"
      ],
      "properties": {
        "bssid": {
          "type": "string",
          "description": "Event BSSID",
          "example": "c9:d1:e7:48:90:00"
        },
        "client_mac": {
          "type": "string",
          "description": "Event client MAC",
          "example": "7e:d0:c5:24:b0:01"
        },
        "description": {
          "type": "string",
          "description": "Event description",
          "example": "An AP detected"
        },
        "device_mac": {
          "type": "string",
          "description": "Event device MAC",
          "example": "ea:04:b4:dd:00:00"
        },
        "device_serial": {
          "type": "string",
          "description": "Event device serial",
          "example": "QRZZ000001"
        },
        "device_type": {
          "type": "string",
          "description": "Event device type",
          "example": "CLIENT"
        },
        "event_type": {
          "type": "string",
          "description": "Event type",
          "example": "Client DNS Failure"
        },
        "event_uuid": {
          "type": "string",
          "description": "Event UUID",
          "example": "eaf4efb3-54e7-4fa3-9b04-dac11a79b785"
        },
        "group_name": {
          "type": "string",
          "description": "Event group name",
          "example": "default"
        },
        "hostname": {
          "type": "string",
          "description": "Event host name",
          "example": "QRZZ000001"
        },
        "labels": {
          "type": "array",
          "description": "List of labels",
          "example": [
            {
              "id": 6,
              "name": "default"
            }
          ],
          "items": {
            "$ref": "#/definitions/EventLabel"
          }
        },
        "number": {
          "type": "number",
          "description": "Event Number",
          "example": 5
        },
        "sites": {
          "type": "array",
          "description": "List of sites",
          "example": [
            {
              "id": 6,
              "name": "default"
            }
          ],
          "items": {
            "$ref": "#/definitions/EventSite"
          }
        },
        "timestamp": {
          "type": "number",
          "description": "When the event occured. The value is epoch seconds",
          "example": 5765876876
        }
      }
    },
    "EventLabel": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of label",
          "example": 6
        },
        "name": {
          "type": "string",
          "description": "name of label",
          "example": "default"
        }
      }
    },
    "EventSite": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of site",
          "example": 6
        },
        "name": {
          "type": "string",
          "description": "name of site",
          "example": "default"
        }
      }
    },
    "Uplink": {
      "type": "object",
      "required": [
        "link_index",
        "name",
        "description",
        "priority",
        "status",
        "wan_status",
        "vlan",
        "vlan_description",
        "loss",
        "latency",
        "avg_mos",
        "default_gw",
        "is_backup",
        "is_virtual_uplink",
        "link_status",
        "link_tag",
        "private_ip",
        "public_ip",
        "wan_type",
        "usage",
        "throughput"
      ],
      "properties": {
        "link_index": {
          "type": "integer",
          "description": "Uplink index  within a device",
          "example": 4
        },
        "name": {
          "type": "string",
          "description": "Uplink name",
          "example": "Reliance"
        },
        "description": {
          "type": "string",
          "description": "Uplink description",
          "example": "reliance-GE0/0/1"
        },
        "priority": {
          "type": "integer",
          "description": "Uplink priority",
          "example": 200
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "wan_status": {
          "type": "string",
          "description": "WAN status is Up or Down",
          "example": "Up"
        },
        "vlan": {
          "type": "integer",
          "description": "Primary VLAN.",
          "example": 3333
        },
        "vlan_description": {
          "type": "string",
          "description": "VLAN description",
          "example": "VLAN description"
        },
        "loss": {
          "type": "integer",
          "description": "Loss percentage",
          "example": 2.2
        },
        "latency": {
          "type": "integer",
          "description": "Latency in ms",
          "example": 0.56
        },
        "avg_mos": {
          "type": "integer",
          "description": "Average MOS",
          "example": 1.1
        },
        "default_gw": {
          "type": "string",
          "description": "Default gateway IP",
          "example": "10.29.16.1"
        },
        "is_backup": {
          "type": "boolean",
          "description": "Backup uplink flag",
          "example": false
        },
        "is_virtual_uplink": {
          "type": "boolean",
          "description": "Virtual uplink flag",
          "example": false
        },
        "link_status": {
          "type": "string",
          "description": "Link status",
          "example": "Up"
        },
        "link_tag": {
          "type": "string",
          "description": "Link tag",
          "example": "reliance"
        },
        "private_ip": {
          "type": "string",
          "description": "Private IP",
          "example": "10.29.16.6"
        },
        "public_ip": {
          "type": "string",
          "description": "Public IP",
          "example": "10.29.16.6"
        },
        "wan_type": {
          "type": "string",
          "description": "WAN type",
          "example": "Internet"
        },
        "throughput": {
          "type": "object",
          "description": "received and sent throughput of the uplink in bytes",
          "properties": {
            "received": {
              "type": "integer",
              "description": "throughput received in the uplink in bytes",
              "example": 2
            },
            "sent": {
              "type": "integer",
              "description": "throughput sent in the uplink in bytes",
              "example": 2
            }
          }
        },
        "usage": {
          "type": "object",
          "properties": {
            "received": {
              "type": "integer",
              "description": "total usage in receiving",
              "example": 21
            },
            "sent": {
              "type": "integer",
              "description": "total usage in sending",
              "example": 21
            },
            "total": {
              "type": "integer",
              "description": "total usage in the uplink",
              "example": 42
            }
          }
        }
      }
    },
    "MCDetail": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "group_name",
        "status",
        "ip_address",
        "model",
        "firmware_version",
        "labels",
        "site",
        "uplinks",
        "cpu_utilization",
        "uptime",
        "mem_total",
        "mem_free",
        "firmware_backup_version",
        "mac_range",
        "reboot_reason",
        "mode",
        "recommended_version",
        "location",
        "uplinks_metric",
        "tunnels_metric",
        "mm_hostname",
        "mobility_master"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Serial number",
          "example": "MC675878"
        },
        "name": {
          "type": "string",
          "description": "Device Name",
          "example": "Controller2"
        },
        "macaddr": {
          "type": "string",
          "description": "MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which device belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "ip_address": {
          "type": "string",
          "description": "IP address",
          "example": "10.29.31.251"
        },
        "model": {
          "type": "string",
          "description": "Model number",
          "example": "MC-2345"
        },
        "firmware_version": {
          "type": "string",
          "description": "Firmware version",
          "example": "7.2.3.4-4.5.678"
        },
        "labels": {
          "type": "array",
          "description": "list labels assigned",
          "example": [],
          "items": {
            "type": "string"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned",
          "example": null
        },
        "uplinks": {
          "type": "array",
          "description": "List of Device uplinks",
          "example": [],
          "items": {
            "$ref": "#/definitions/Uplink"
          }
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current CPU utilization",
          "example": 12
        },
        "uptime": {
          "type": "integer",
          "description": "Uptime in seconds",
          "example": 8789789
        },
        "mem_total": {
          "type": "integer",
          "description": "Total memory",
          "example": 676868
        },
        "mem_free": {
          "type": "integer",
          "description": "Free memory",
          "example": 5657
        },
        "firmware_backup_version": {
          "type": "string",
          "description": "Backup firmware version",
          "example": "7.2.3.4-3.4.567"
        },
        "mac_range": {
          "type": "string",
          "description": "MAC range",
          "example": "range"
        },
        "role": {
          "type": "string",
          "description": "Device Role",
          "example": "access"
        },
        "ap_count": {
          "type": "integer",
          "description": "Number of APs connected to the device",
          "example": 5
        },
        "usage": {
          "type": "string",
          "description": "Device usage",
          "example": 7687687
        },
        "reboot_reason": {
          "type": "string",
          "description": "Device last reboot reason",
          "example": "User reboot"
        },
        "mode": {
          "type": "string",
          "description": "Mode of Device",
          "example": "Auto"
        },
        "poe_budget": {
          "type": "integer",
          "description": "Device PoE budget in mW",
          "example": 12
        },
        "poe_consumption": {
          "type": "integer",
          "description": "Device PoE consumption in mW",
          "example": 12
        },
        "poe_available": {
          "type": "integer",
          "description": "Device PoE available in mW",
          "example": 12
        },
        "poe_supported": {
          "type": "boolean",
          "description": "Device PoE supportability",
          "example": true
        },
        "recommended_version": {
          "type": "string",
          "description": "Device recommended firmware version",
          "example": "7.3.4.5-4.5.678"
        },
        "location": {
          "example": {},
          "$ref": "#/definitions/Location"
        },
        "est_status": {
          "type": "string",
          "description": "EST enrollment status of virtual gateway",
          "example": "Enrolled"
        },
        "est_cert_expiry_time": {
          "type": "string",
          "description": "EST expiry time of virtual gateway",
          "example": "2019-08-21T14:34:52.000Z"
        },
        "vgw_sys_bw_limit": {
          "type": "integer",
          "description": "Bandwidth limit of virtual gateway",
          "example": 1024
        },
        "vgw_sys_bw_usage": {
          "type": "integer",
          "description": "Bandwidth usage of virtual gateway",
          "example": 700
        },
        "ntp_server_info": {
          "description": "Details of the NTP server configured",
          "type": "object",
          "properties": {
            "server": {
              "description": "NTP Server hostname/IP",
              "type": "string",
              "example": "ntp.xtom.com.hk"
            },
            "sync": {
              "description": "synchronized or not ('1' when synchronized and '0' otherwise)",
              "type": "integer",
              "example": 1
            }
          }
        },
        "modem_info": {
          "description": "Details of LTE Modem plugged in",
          "type": "object",
          "properties": {
            "type": {
              "description": "LTE Modem Type",
              "type": "string",
              "example": "HUAWEI Mobile"
            },
            "hwstate": {
              "description": "Current state of the modem - Initialized/Connected/Disconnected",
              "type": "string",
              "example": "Connected"
            }
          }
        },
        "uplinks_metric": {
          "type": "object",
          "required": [
            "up",
            "down",
            "total"
          ],
          "properties": {
            "up": {
              "description": "Total uplinks up count",
              "type": "integer",
              "example": 4
            },
            "down": {
              "description": "Total uplinks down count",
              "type": "integer",
              "example": 3
            },
            "total": {
              "description": "Total uplinks count",
              "type": "integer",
              "example": 7
            }
          }
        },
        "tunnels_metric": {
          "type": "object",
          "required": [
            "up",
            "down",
            "total"
          ],
          "properties": {
            "up": {
              "description": "Total tunnels up count",
              "type": "integer",
              "example": 4
            },
            "down": {
              "description": "Total tunnels down count",
              "type": "integer",
              "example": 4
            },
            "total": {
              "description": "Total tunnels count",
              "type": "integer",
              "example": 8
            }
          }
        },
        "public_ip": {
          "type": "string",
          "description": "Public IP address"
        },
        "mm_hostname": {
          "type": "string",
          "description": "Mobility master hostname",
          "example": "MM123"
        },
        "mobility_master": {
          "type": "string",
          "description": "Mobility master serial number",
          "example": "BA0003755"
        }
      }
    },
    "MCDetailV2": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "group_name",
        "status",
        "ip_address",
        "model",
        "firmware_version",
        "labels",
        "site",
        "cpu_utilization",
        "uptime",
        "mem_total",
        "mem_free",
        "firmware_backup_version",
        "mac_range",
        "reboot_reason",
        "mode",
        "recommended_version",
        "location",
        "mconductor_hostname",
        "mobility_conductor"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Serial number",
          "example": "MC675878"
        },
        "name": {
          "type": "string",
          "description": "Device Name",
          "example": "Controller2"
        },
        "macaddr": {
          "type": "string",
          "description": "MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "group_name": {
          "type": "string",
          "description": "Group name to which device belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "ip_address": {
          "type": "string",
          "description": "IP address",
          "example": "10.29.31.251"
        },
        "model": {
          "type": "string",
          "description": "Model number",
          "example": "MC-2345"
        },
        "firmware_version": {
          "type": "string",
          "description": "Firmware version",
          "example": "7.2.3.4-4.5.678"
        },
        "labels": {
          "type": "array",
          "description": "list labels assigned",
          "example": [],
          "items": {
            "type": "string"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned",
          "example": null
        },
        "uplinks": {
          "type": "array",
          "description": "List of Device uplinks",
          "example": [],
          "items": {
            "$ref": "#/definitions/Uplink"
          }
        },
        "cpu_utilization": {
          "type": "integer",
          "description": "Current CPU utilization",
          "example": 12
        },
        "uptime": {
          "type": "integer",
          "description": "Uptime in seconds",
          "example": 8789789
        },
        "mem_total": {
          "type": "integer",
          "description": "Total memory",
          "example": 676868
        },
        "mem_free": {
          "type": "integer",
          "description": "Free memory",
          "example": 5657
        },
        "firmware_backup_version": {
          "type": "string",
          "description": "Backup firmware version",
          "example": "7.2.3.4-3.4.567"
        },
        "mac_range": {
          "type": "string",
          "description": "MAC range",
          "example": "range"
        },
        "role": {
          "type": "string",
          "description": "Device Role",
          "example": "access"
        },
        "ap_count": {
          "type": "integer",
          "description": "Number of APs connected to the device",
          "example": 5
        },
        "usage": {
          "type": "string",
          "description": "Device usage",
          "example": 7687687
        },
        "reboot_reason": {
          "type": "string",
          "description": "Device last reboot reason",
          "example": "User reboot"
        },
        "mode": {
          "type": "string",
          "description": "Mode of Device",
          "example": "Auto"
        },
        "poe_budget": {
          "type": "integer",
          "description": "Device PoE budget in mW",
          "example": 12
        },
        "poe_consumption": {
          "type": "integer",
          "description": "Device PoE consumption in mW",
          "example": 12
        },
        "poe_available": {
          "type": "integer",
          "description": "Device PoE available in mW",
          "example": 12
        },
        "poe_supported": {
          "type": "boolean",
          "description": "Device PoE supportability",
          "example": true
        },
        "recommended_version": {
          "type": "string",
          "description": "Device recommended firmware version",
          "example": "7.3.4.5-4.5.678"
        },
        "location": {
          "example": {},
          "$ref": "#/definitions/Location"
        },
        "est_status": {
          "type": "string",
          "description": "EST enrollment status of virtual gateway",
          "example": "Enrolled"
        },
        "est_cert_expiry_time": {
          "type": "string",
          "description": "EST expiry time of virtual gateway",
          "example": "2019-08-21T14:34:52.000Z"
        },
        "vgw_sys_bw_limit": {
          "type": "integer",
          "description": "Bandwidth limit of virtual gateway",
          "example": 1024
        },
        "vgw_sys_bw_usage": {
          "type": "integer",
          "description": "Bandwidth usage of virtual gateway",
          "example": 700
        },
        "ntp_server_info": {
          "description": "Details of the NTP server configured",
          "type": "object",
          "properties": {
            "server": {
              "description": "NTP Server hostname/IP",
              "type": "string",
              "example": "ntp.xtom.com.hk"
            },
            "sync": {
              "description": "synchronized or not ('1' when synchronized and '0' otherwise)",
              "type": "integer",
              "example": 1
            }
          }
        },
        "public_ip": {
          "type": "string",
          "description": "Public IP address"
        },
        "mconductor_hostname": {
          "type": "string",
          "description": "Mobility conductor hostname",
          "example": "MCR123"
        },
        "mobility_conductor": {
          "type": "string",
          "description": "Mobility conductor serial number",
          "example": "BA0003755"
        },
        "sys_location": {
          "type": "string",
          "description": "Name of the location",
          "example": "Hardware Lab"
        },
        "sys_contact": {
          "type": "string",
          "description": "Name of the contact",
          "example": "Hardwarelab.contact@noreply.com"
        }
      }
    },
    "Location": {
      "type": "object",
      "required": [
        "gps",
        "street_address"
      ],
      "properties": {
        "gps": {
          "example": {},
          "$ref": "#/definitions/GPS"
        },
        "street_address": {
          "example": {},
          "$ref": "#/definitions/StreetAddress"
        }
      }
    },
    "GPS": {
      "type": "object",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "string",
          "description": "Latitude Coordinate",
          "example": 37.09808
        },
        "longitude": {
          "type": "string",
          "description": "Longitude Coordinate",
          "example": 78.078
        }
      }
    },
    "StreetAddress": {
      "type": "object",
      "required": [
        "address_1",
        "city",
        "country",
        "postal_code",
        "state"
      ],
      "properties": {
        "address_1": {
          "type": "string",
          "description": "Address Line 1",
          "example": "street1"
        },
        "city": {
          "type": "string",
          "description": "City name",
          "example": "Chennai"
        },
        "country": {
          "type": "string",
          "description": "Country name",
          "example": "India"
        },
        "postal_code": {
          "type": "string",
          "description": "Zip Code",
          "example": 600018
        },
        "state": {
          "type": "string",
          "description": "State name",
          "example": "Tamil Nadu"
        }
      }
    },
    "MC": {
      "type": "object",
      "required": [
        "serial",
        "name",
        "macaddr",
        "group_name"
      ],
      "properties": {
        "serial": {
          "type": "string",
          "description": "Serial number",
          "example": "MC6547654"
        },
        "name": {
          "type": "string",
          "description": "Device Name",
          "example": "Controller2"
        },
        "macaddr": {
          "type": "string",
          "description": "MAC address",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "group_name": {
          "type": "string",
          "description": "Group name which device belongs to",
          "example": "dual_5GHz"
        },
        "status": {
          "type": "string",
          "description": "Status is Up or Down",
          "example": "Up"
        },
        "ip_address": {
          "type": "string",
          "description": "IP address",
          "example": "10.29.31.251"
        },
        "model": {
          "type": "string",
          "description": "Model number",
          "example": "MC-231"
        },
        "firmware_version": {
          "type": "string",
          "description": "Firmware version",
          "example": 8.34785
        },
        "role": {
          "type": "string",
          "description": "Device Role",
          "example": "access"
        },
        "ap_count": {
          "type": "integer",
          "description": "Number of APs connected",
          "example": 5
        },
        "usage": {
          "type": "string",
          "description": "Device usage",
          "example": 767896
        },
        "labels": {
          "type": "array",
          "description": "list labels assigned",
          "example": [],
          "items": {
            "type": "string",
            "example": "label1"
          }
        },
        "site": {
          "type": "string",
          "description": "site assigned",
          "example": null
        },
        "est_status": {
          "type": "string",
          "description": "EST enrollment status of virtual gateway",
          "example": "Enrolled"
        },
        "est_cert_expiry_time": {
          "type": "string",
          "description": "EST expiry time of virtual gateway",
          "example": "2019-08-21T14:34:52.000Z"
        },
        "vgw_sys_bw_limit": {
          "type": "integer",
          "description": "Bandwidth limit of virtual gateway",
          "example": 1024
        },
        "vgw_sys_bw_usage": {
          "type": "integer",
          "description": "Bandwidth usage of virtual gateway",
          "example": 700
        }
      }
    },
    "GatewayList": {
      "type": "object",
      "required": [
        "count",
        "gateways"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of devices in the list",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total devices. Valid when calculate_total is passed in query parameters",
          "example": 8
        },
        "gateways": {
          "type": "array",
          "description": "List of gateways",
          "example": [],
          "items": {
            "$ref": "#/definitions/MC"
          }
        }
      }
    },
    "MCList": {
      "type": "object",
      "required": [
        "count",
        "mcs"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of devices in the list",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total devices. Valid when calculate_total is passed in query parameters",
          "example": 8
        },
        "mcs": {
          "type": "array",
          "description": "List of devices",
          "example": [],
          "items": {
            "$ref": "#/definitions/MC"
          }
        }
      }
    },
    "WANCompressionStats": {
      "type": "object",
      "required": [
        "timestamp",
        "uncompressed_data_bytes",
        "compressed_data_bytes",
        "saved_data_bytes"
      ],
      "properties": {
        "timestamp": {
          "type": "number",
          "description": "Sample timestamp in epoch",
          "example": 76586768
        },
        "uncompressed_data_bytes": {
          "type": "number",
          "description": "Uncompressed data bytes for the timestamp",
          "example": 8979868
        },
        "compressed_data_bytes": {
          "type": "number",
          "description": "Compressed data bytes for the timestamp",
          "example": 78
        },
        "saved_data_bytes": {
          "type": "number",
          "description": "Saved data bytes for the timestamp",
          "example": 89789
        }
      }
    },
    "WANCompressionStatsList": {
      "type": "object",
      "required": [
        "count",
        "interval",
        "samples"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of samples",
          "example": 5
        },
        "interval": {
          "type": "string",
          "description": "Sample interval. It can be one of \"5minutes\", \"1hour\", \"1day\" and \"1week\"",
          "example": "5minutes"
        },
        "samples": {
          "type": "array",
          "description": "List of data samples",
          "example": [],
          "items": {
            "$ref": "#/definitions/WANCompressionStats"
          }
        }
      }
    },
    "ManagementPort": {
      "type": "object",
      "required": [
        "name",
        "alignment",
        "phy_type",
        "sub_type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the port.",
          "example": "port 1"
        },
        "alignment": {
          "type": "string",
          "description": "Alignment of the port.",
          "example": "Enum"
        },
        "phy_type": {
          "type": "string",
          "description": "Type of interface.",
          "example": "-"
        },
        "sub_type": {
          "type": "string",
          "description": "Sub type of interface.",
          "example": "100/1000T"
        }
      }
    },
    "PowerSupply": {
      "type": "object",
      "required": [
        "index",
        "status"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "description": "Index of power supply.",
          "example": 1
        },
        "status": {
          "type": "string",
          "description": "Status of power supply.",
          "example": "Up"
        }
      }
    },
    "MgmtModule": {
      "type": "object",
      "required": [
        "index",
        "status"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "description": "Index of management module.",
          "example": 23
        },
        "status": {
          "type": "string",
          "description": "Status of management module.",
          "example": "Up"
        }
      }
    },
    "SlotInfo": {
      "type": "object",
      "required": [
        "name",
        "product_id",
        "ports"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Slot name.",
          "example": "slot1"
        },
        "product_id": {
          "type": "string",
          "description": "Product id of the module.",
          "example": "prod_2"
        },
        "ports": {
          "type": "array",
          "description": "List of port names.",
          "example": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChassisInfo": {
      "type": "object",
      "required": [
        "power_supplies",
        "mgmt_mods",
        "mgmt_port",
        "slots"
      ],
      "properties": {
        "power_supplies": {
          "type": "array",
          "description": "Power supply status(es).",
          "example": [],
          "items": {
            "$ref": "#/definitions/PowerSupply"
          }
        },
        "mgmt_mods": {
          "type": "array",
          "description": "Management module status(es).",
          "example": [],
          "items": {
            "$ref": "#/definitions/MgmtModule"
          }
        },
        "mgmt_port": {
          "type": "array",
          "description": "Management port details.",
          "example": [],
          "items": {
            "$ref": "#/definitions/ManagementPort"
          }
        },
        "slots": {
          "type": "array",
          "description": "Blade information.",
          "example": [],
          "items": {
            "$ref": "#/definitions/SlotInfo"
          }
        }
      }
    },
    "DHCPClientList": {
      "type": "object",
      "required": [
        "count",
        "clients"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count of Dhcp Clients",
          "example": 5
        },
        "clients": {
          "type": "array",
          "description": "List of dhcp client information",
          "example": [],
          "items": {
            "$ref": "#/definitions/DHCPClientInfo"
          }
        }
      }
    },
    "DHCPServerList": {
      "type": "object",
      "required": [
        "count",
        "subnets"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count of Dhcp subnets",
          "example": 5
        },
        "subnets": {
          "type": "array",
          "description": "List of dhcp subnet information",
          "example": [],
          "items": {
            "$ref": "#/definitions/DHCPSubnetInfo"
          }
        }
      }
    },
    "DHCPPool": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Count of Dhcp pools",
          "example": 5
        },
        "result": {
          "type": "array",
          "description": "List of dhcp pools",
          "example": [],
          "items": {
            "$ref": "#/definitions/DHCPPoolInfo"
          }
        }
      }
    },
    "GatewayVLANInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "addr_mode": {
            "type": "string",
            "description": "Addressing mode",
            "example": "Static"
          },
          "admin_mode": {
            "type": "string",
            "description": "Administrator mode",
            "example": "Enabled"
          },
          "ipv4": {
            "type": "string",
            "description": "IPv4 address"
          },
          "oper_state": {
            "type": "string",
            "description": "Operational State",
            "example": "Down"
          },
          "vlan_desc": {
            "type": "string",
            "description": "VLAN description"
          },
          "vlan_id": {
            "type": "integer",
            "description": "Vlan id",
            "example": 1
          }
        }
      }
    },
    "DHCPClientInfo": {
      "type": "object",
      "required": [
        "mac",
        "ip",
        "mask",
        "vlan_id",
        "subnet"
      ],
      "properties": {
        "client_name": {
          "type": "string",
          "description": "Client hostname",
          "example": "DESKTOP-5TDE5H7"
        },
        "client_type": {
          "type": "string",
          "description": "Client device type",
          "example": "MSFT 5.0"
        },
        "ip": {
          "type": "string",
          "description": "IP address of the client",
          "example": "3.4.5.6"
        },
        "lease_end_ts": {
          "type": "integer",
          "description": "Lease end timestamp for the client",
          "example": 1527949018
        },
        "lease_start_ts": {
          "type": "integer",
          "description": "Lease start timestamp for the client",
          "example": 1527689818
        },
        "lease_time": {
          "type": "integer",
          "description": "Lease time configured for the client",
          "example": 259200
        },
        "lease_time_left": {
          "type": "integer",
          "description": "Lease time remaining for the client",
          "example": 258045
        },
        "mac": {
          "type": "string",
          "description": "MAC address of the client",
          "example": "c8:b5:ad:c3:b2:04"
        },
        "mask": {
          "type": "string",
          "description": "Network mask of the client",
          "example": "255.255.255.0"
        },
        "pool_name": {
          "type": "string",
          "description": "Name of the DHCP pool that client belongs to",
          "example": "pool_1"
        },
        "reserved": {
          "type": "boolean",
          "description": "Flag to denote static leases",
          "example": false
        },
        "subnet": {
          "type": "string",
          "description": "Subnet the client is in the network",
          "example": "0.0.0.255"
        },
        "vlan_id": {
          "type": "integer",
          "description": "VLAN associated to the client",
          "example": 3333
        }
      }
    },
    "DHCPSubnetInfo": {
      "type": "object",
      "required": [
        "vlan_id",
        "subnet",
        "free_percent"
      ],
      "properties": {
        "free_percent": {
          "type": "integer",
          "description": "Number of free client leases available in percentage",
          "example": 3
        },
        "lease_time": {
          "type": "integer",
          "description": "Lease time configured for the client",
          "example": 259200
        },
        "pool_name": {
          "type": "string",
          "description": "DHCP Pool Name configured",
          "example": "pool_1"
        },
        "pool_size": {
          "type": "integer",
          "description": "DHCP Pool Size",
          "example": 253
        },
        "subnet": {
          "type": "string",
          "description": "Subnet the server is in the network",
          "example": "255.0.0.0"
        },
        "vlan_id": {
          "type": "integer",
          "description": "VLAN id associated to the Server",
          "example": 3333
        }
      }
    },
    "DHCPPoolInfo": {
      "type": "object",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Subnet of the pool",
          "example": "192.168.3.0/24"
        },
        "vlan_id": {
          "type": "integer",
          "description": "VLAN id associated to the pool",
          "example": 33
        },
        "lease_time": {
          "type": "integer",
          "description": "Lease time configured",
          "example": 259200
        },
        "pool_name": {
          "type": "string",
          "description": "DHCP Pool Name configured",
          "example": "pool_1"
        },
        "pool_type": {
          "type": "integer",
          "description": "Pool type",
          "example": 3
        },
        "pool_size": {
          "type": "integer",
          "description": "DHCP Pool Size",
          "example": 253
        },
        "curr_leases": {
          "type": "integer",
          "description": "Pool current leases",
          "example": 0
        },
        "free_ip_addr_percent": {
          "type": "number",
          "format": "float",
          "description": "Percent of free ip addresses",
          "example": 99
        }
      }
    },
    "SwitchStackVlanList": {
      "type": "object",
      "required": [
        "count",
        "vlans"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of vlans in the list",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total vlans. Valid when calculate_total is passed in query parameters",
          "example": 5
        },
        "vlans": {
          "$ref": "#/definitions/SwitchStackVlanInfo"
        }
      }
    },
    "SwitchStackVlanInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "vlan name",
            "example": "DEFAULT_VLAN"
          },
          "id": {
            "type": "integer",
            "description": "vlan id",
            "example": 1
          },
          "tagged_ports": {
            "type": "array",
            "description": "vlan tagged ports",
            "items": {
              "type": "string",
              "example": "1A"
            }
          },
          "untagged_ports": {
            "type": "array",
            "description": "vlan untagged ports",
            "items": {
              "type": "string",
              "example": "1B"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the VLAN. Status can be Up/Down",
            "example": "Up"
          },
          "is_igmp_enabled": {
            "type": "boolean",
            "description": "flag for igmp enabled",
            "example": true
          },
          "is_jumbo_enabled": {
            "type": "boolean",
            "description": "flag for jumbo enabled",
            "example": true
          },
          "is_voice_enabled": {
            "type": "boolean",
            "description": "flag for voice enabled",
            "example": true
          },
          "promiscuous_ports": {
            "type": "array",
            "description": "vlan promiscuous ports",
            "items": {
              "type": "string",
              "example": "1B"
            }
          },
          "isl_ports": {
            "type": "array",
            "description": "vlan isl ports",
            "items": {
              "type": "string",
              "example": "1B"
            }
          },
          "type": {
            "type": "string",
            "description": "Primary VLAN Type",
            "enum": [
              "Regular",
              "Private-Primary",
              "Private-Isolated",
              "Private-Community"
            ],
            "example": "Regular"
          },
          "primary_vlan_id": {
            "type": "integer",
            "description": "Primary VLAN id",
            "example": 1
          }
        }
      }
    },
    "CXSwitchStackVlanList": {
      "type": "object",
      "required": [
        "count",
        "vlans"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of vlans in the list",
          "example": 5
        },
        "total": {
          "type": "integer",
          "description": "Total vlans. Valid when calculate_total is passed in query parameters",
          "example": 5
        },
        "vlans": {
          "$ref": "#/definitions/CXSwitchStackVlanInfo"
        }
      }
    },
    "CXSwitchStackVlanInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "vlan name",
            "example": "DEFAULT_VLAN"
          },
          "id": {
            "type": "integer",
            "description": "vlan id",
            "example": 1
          },
          "ipaddress": {
            "type": "array",
            "description": "vlan tagged ipaddress",
            "example": [],
            "items": {
              "type": "string"
            }
          },
          "tagged_ports": {
            "type": "array",
            "description": "vlan tagged ports",
            "items": {
              "type": "string",
              "example": "1/1/10"
            }
          },
          "untagged_ports": {
            "type": "array",
            "description": "vlan untagged ports",
            "items": {
              "type": "string",
              "example": "1/1/45"
            }
          },
          "access_ports": {
            "type": "array",
            "description": "vlan access ports",
            "items": {
              "type": "string",
              "example": "1/1/15"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the VLAN. Status can be Up/Down",
            "example": "Up"
          },
          "is_igmp_enabled": {
            "type": "boolean",
            "description": "flag for igmp enabled",
            "example": true
          },
          "is_jumbo_enabled": {
            "type": "boolean",
            "description": "flag for jumbo enabled",
            "example": true
          },
          "is_voice_enabled": {
            "type": "boolean",
            "description": "flag for voice enabled",
            "example": true
          },
          "promiscuous_ports": {
            "type": "array",
            "description": "vlan promiscuous ports",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "isl_ports": {
            "type": "array",
            "description": "vlan isl ports",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "type": {
            "type": "string",
            "description": "Primary VLAN Type",
            "enum": [
              "Regular",
              "Private-Primary",
              "Private-Isolated",
              "Private-Community"
            ],
            "example": "Regular"
          },
          "oper_state_reason": {
            "type": "string",
            "description": "operation state reason",
            "example": "OK"
          },
          "is_management_vlan": {
            "type": "boolean",
            "description": "vlan is management vlan",
            "example": false
          }
        }
      }
    },
    "PortPoeInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "plc_power_class_type": {
              "type": "string",
              "description": "plc power class status code",
              "example": "0/-"
            },
            "dlc_power_class_type": {
              "type": "string",
              "description": "dlc power class status code",
              "example": "0/-"
            },
            "poe_priority": {
              "type": "number",
              "description": "poe priority code",
              "format": "integer",
              "example": 1
            },
            "pre_standard_detect": {
              "type": "boolean",
              "description": "pre standard detect",
              "example": false
            },
            "alloc_by_config": {
              "type": "number",
              "description": "allocation by config",
              "format": "integer",
              "example": 2
            },
            "alloc_by_actual": {
              "type": "number",
              "description": "allocation by actual",
              "format": "integer",
              "example": 2
            },
            "port_configured_type": {
              "type": "string",
              "description": "port configured type",
              "example": ""
            },
            "poe_value": {
              "type": "number",
              "description": "poe value",
              "format": "integer",
              "example": 25
            },
            "med_lldp_detect_status": {
              "type": "number",
              "description": "med lldp detect status",
              "format": "integer",
              "example": 2
            },
            "pse_configured_tlv": {
              "type": "number",
              "description": "pse configured tlv",
              "format": "integer",
              "example": 2
            },
            "pse_sent_type_tlv": {
              "type": "array",
              "items": {
                "type": "integer",
                "example": 3
              },
              "description": "pse sent type tlv",
              "format": "integer"
            },
            "pd_sent_type_tlv": {
              "type": "number",
              "description": "pd sent type tlv",
              "format": "integer",
              "example": 2
            },
            "reserved_power_in_watts": {
              "type": "number",
              "description": "reserved power in watts",
              "format": "float",
              "example": 1.2
            },
            "amperage_drawn_in_milliamps": {
              "type": "number",
              "description": "amperage drawn in milliamps",
              "format": "float",
              "example": 1.2
            },
            "over_current_count": {
              "type": "number",
              "description": "over current count",
              "format": "integer",
              "example": 2
            },
            "mps_absent_count": {
              "type": "number",
              "description": "mps absent count",
              "format": "integer",
              "example": 2
            },
            "power_denied_count": {
              "type": "number",
              "description": "power denied count",
              "format": "integer",
              "example": 2
            },
            "short_count": {
              "type": "number",
              "description": "short count",
              "format": "integer",
              "example": 2
            },
            "power_drawn_in_watts": {
              "type": "number",
              "description": "power drawn in watts",
              "format": "float",
              "example": 1.2
            },
            "port_voltage_in_volts": {
              "type": "number",
              "description": "port voltage in volts",
              "format": "float",
              "example": 1.2
            },
            "poe_detection_status": {
              "type": "number",
              "description": "poe detection status",
              "format": "integer",
              "example": 2
            },
            "power_class": {
              "type": "number",
              "description": "power class",
              "format": "integer",
              "example": 2
            },
            "has_poe": {
              "type": "boolean",
              "description": "has_poe",
              "example": false
            }
          }
        }
      }
    },
    "CXPortPoeInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "poe_slots": {
              "type": "object",
              "properties": {
                "maximum_power_in_watts": {
                  "type": "number",
                  "description": "maximum power in watts",
                  "format": "integer",
                  "example": 0
                },
                "operational_status": {
                  "type": "number",
                  "description": "operational status",
                  "format": "integer",
                  "example": 1
                },
                "power_drawn_in_watts": {
                  "type": "number",
                  "description": "power drawn in watts",
                  "format": "integer",
                  "example": 0
                },
                "power_in_use_in_watts": {
                  "type": "number",
                  "description": "power in use in watts",
                  "format": "integer",
                  "example": 0
                },
                "power_usage_threshold": {
                  "type": "number",
                  "description": "power usage threshold",
                  "format": "integer",
                  "example": 80
                },
                "slot_name": {
                  "type": "string",
                  "description": "slot name",
                  "example": "1/1"
                }
              }
            },
            "plc_power_class_type": {
              "type": "string",
              "description": "plc power class status code",
              "example": "0/-"
            },
            "dlc_power_class_type": {
              "type": "string",
              "description": "dlc power class status code",
              "example": "0/-"
            },
            "poe_priority": {
              "type": "number",
              "description": "poe priority code",
              "format": "integer",
              "example": 1
            },
            "pre_standard_detect": {
              "type": "boolean",
              "description": "pre standard detect",
              "example": false
            },
            "alloc_by_config": {
              "type": "number",
              "description": "allocation by config",
              "format": "integer",
              "example": 2
            },
            "alloc_by_actual": {
              "type": "number",
              "description": "allocation by actual",
              "format": "integer",
              "example": 2
            },
            "cutoff_power": {
              "type": "number",
              "description": "cut off power",
              "format": "integer",
              "example": 0
            },
            "port_configured_type": {
              "type": "string",
              "description": "port configured type",
              "example": ""
            },
            "poe_value": {
              "type": "number",
              "description": "poe value",
              "format": "integer",
              "example": 25
            },
            "med_lldp_detect_status": {
              "type": "number",
              "description": "med lldp detect status",
              "format": "integer",
              "example": 2
            },
            "pse_configured_tlv": {
              "type": "array",
              "description": "psw configured tlv.",
              "items": {
                "type": "integer",
                "example": 3
              }
            },
            "pse_sent_type_tlv": {
              "type": "number",
              "description": "pse sent type tlv",
              "format": "integer",
              "example": 2
            },
            "pd_sent_type_tlv": {
              "type": "number",
              "description": "pd sent type tlv",
              "format": "integer",
              "example": 2
            },
            "reserved_power_in_watts": {
              "type": "number",
              "description": "reserved power in watts",
              "format": "float",
              "example": 1.2
            },
            "amperage_drawn_in_milliamps": {
              "type": "number",
              "description": "amperage drawn in milliamps",
              "format": "float",
              "example": 1.2
            },
            "over_current_count": {
              "type": "number",
              "description": "over current count",
              "format": "integer",
              "example": 2
            },
            "mps_absent_count": {
              "type": "number",
              "description": "mps absent count",
              "format": "integer",
              "example": 2
            },
            "power_denied_count": {
              "type": "number",
              "description": "power denied count",
              "format": "integer",
              "example": 2
            },
            "short_count": {
              "type": "number",
              "description": "short count",
              "format": "integer",
              "example": 2
            },
            "power_drawn_in_watts": {
              "type": "number",
              "description": "power drawn in watts",
              "format": "float",
              "example": 1.2
            },
            "port_voltage_in_volts": {
              "type": "number",
              "description": "port voltage in volts",
              "format": "float",
              "example": 1.2
            },
            "poe_detection_status": {
              "type": "number",
              "description": "poe detection status",
              "format": "integer",
              "example": 2
            },
            "power_class": {
              "type": "number",
              "description": "power class",
              "format": "integer",
              "example": 2
            },
            "has_poe": {
              "type": "boolean",
              "description": "has_poe",
              "example": false
            },
            "pse_allocated_power": {
              "type": "integer",
              "description": "pse allocated power",
              "example": 0
            },
            "lldp_allocated_power_in_watts": {
              "type": "integer",
              "description": "lldp allocated power",
              "example": 0
            },
            "lldp_requested_power_in_watts": {
              "type": "integer",
              "description": "lldp requested power",
              "example": 0
            },
            "poe_updated_time": {
              "type": "integer",
              "format": "int32",
              "description": "timestamp when the poe was last updated",
              "example": 1578293476
            }
          }
        }
      }
    },
    "SwitchPortsPoeList": {
      "type": "object",
      "properties": {
        "data": {
          "properties": {
            "count": {
              "type": "integer",
              "description": "Number of POE Details in the list",
              "example": 4
            },
            "poe_details": {
              "$ref": "#/definitions/PortPoeDetails"
            }
          }
        }
      }
    },
    "CXSwitchPortsPoeList": {
      "type": "object",
      "properties": {
        "data": {
          "properties": {
            "count": {
              "type": "integer",
              "description": "Number of POE Details in the list",
              "example": 4
            },
            "poe_details": {
              "$ref": "#/definitions/PortPoeDetails"
            }
          }
        }
      }
    },
    "PortPoeDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "port": {
            "type": "string",
            "description": "Switch Port Number",
            "example": "1"
          },
          "poe_slots": {
            "type": "object",
            "properties": {
              "maximum_power_in_watts": {
                "type": "number",
                "description": "maximum power in watts",
                "format": "integer",
                "example": 0
              },
              "operational_status": {
                "type": "number",
                "description": "operational status",
                "format": "integer",
                "example": 1
              },
              "power_drawn_in_watts": {
                "type": "number",
                "description": "power drawn in watts",
                "format": "integer",
                "example": 0
              },
              "power_in_use_in_watts": {
                "type": "number",
                "description": "power in use in watts",
                "format": "integer",
                "example": 0
              },
              "power_usage_threshold": {
                "type": "number",
                "description": "power usage threshold",
                "format": "integer",
                "example": 80
              },
              "slot_name": {
                "type": "string",
                "description": "slot name",
                "example": "1/1"
              }
            }
          },
          "plc_power_class_type": {
            "type": "string",
            "description": "plc power class status code",
            "example": "0/-"
          },
          "dlc_power_class_type": {
            "type": "string",
            "description": "dlc power class status code",
            "example": "0/-"
          },
          "poe_priority": {
            "type": "number",
            "description": "poe priority code",
            "format": "integer",
            "example": 1
          },
          "pre_standard_detect": {
            "type": "boolean",
            "description": "pre standard detect",
            "example": false
          },
          "alloc_by_config": {
            "type": "number",
            "description": "allocation by config",
            "format": "integer",
            "example": 2
          },
          "alloc_by_actual": {
            "type": "number",
            "description": "allocation by actual",
            "format": "integer",
            "example": 2
          },
          "port_configured_type": {
            "type": "string",
            "description": "port configured type",
            "example": ""
          },
          "poe_value": {
            "type": "number",
            "description": "poe value",
            "format": "integer",
            "example": 25
          },
          "med_lldp_detect_status": {
            "type": "number",
            "description": "med lldp detect status",
            "format": "integer",
            "example": 2
          },
          "pse_configured_tlv": {
            "type": "number",
            "description": "pse configured tlv",
            "format": "integer",
            "example": 2
          },
          "pse_sent_type_tlv": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 3
            },
            "description": "pse sent type tlv",
            "format": "integer"
          },
          "pd_sent_type_tlv": {
            "type": "number",
            "description": "pd sent type tlv",
            "format": "integer",
            "example": 2
          },
          "reserved_power_in_watts": {
            "type": "number",
            "description": "reserved power in watts",
            "format": "float",
            "example": 1.2
          },
          "amperage_drawn_in_milliamps": {
            "type": "number",
            "description": "amperage drawn in milliamps",
            "format": "float",
            "example": 1.2
          },
          "over_current_count": {
            "type": "number",
            "description": "over current count",
            "format": "integer",
            "example": 2
          },
          "mps_absent_count": {
            "type": "number",
            "description": "mps absent count",
            "format": "integer",
            "example": 2
          },
          "power_denied_count": {
            "type": "number",
            "description": "power denied count",
            "format": "integer",
            "example": 2
          },
          "short_count": {
            "type": "number",
            "description": "short count",
            "format": "integer",
            "example": 2
          },
          "power_drawn_in_watts": {
            "type": "number",
            "description": "power drawn in watts",
            "format": "float",
            "example": 1.2
          },
          "port_voltage_in_volts": {
            "type": "number",
            "description": "port voltage in volts",
            "format": "float",
            "example": 1.2
          },
          "poe_detection_status": {
            "type": "number",
            "description": "poe detection status",
            "format": "integer",
            "example": 2
          },
          "power_class": {
            "type": "number",
            "description": "power class",
            "format": "integer",
            "example": 2
          },
          "has_poe": {
            "type": "boolean",
            "description": "has_poe",
            "example": false
          }
        }
      }
    },
    "VSXInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "device_role": {
              "type": "string",
              "description": "role of the switch",
              "enum": [
                "Primary",
                "Secondary"
              ]
            },
            "device_peer_role": {
              "type": "string",
              "description": "role of the peer switch",
              "enum": [
                "Primary",
                "Secondary"
              ]
            },
            "isl_port": {
              "type": "string",
              "description": "ISL Port name",
              "example": "1/1/14"
            },
            "peer_isl_port": {
              "type": "string",
              "description": "Peer ISL Port name",
              "example": "1/1/20"
            },
            "keep_alive_peer_ip": {
              "type": "string",
              "description": "IP address of the keep alive peer switch",
              "example": "10.24.23.3"
            },
            "keep_alive_src_ip": {
              "type": "string",
              "description": "IP address of the keep alive source switch",
              "example": "10.24.33.9"
            },
            "last_synced": {
              "type": "integer",
              "format": "int32",
              "description": "timestamp when the switch was last synced",
              "example": 1578293476
            },
            "device_mac": {
              "type": "string",
              "description": "MAC address of the switch device",
              "example": "c8:b5:ad:c3:b2:04"
            },
            "peer_device_mac": {
              "type": "string",
              "description": "MAC address of the peer switch device",
              "example": "c8:b5:ad:c3:b2:04"
            },
            "config_sync": {
              "type": "string",
              "description": "config sync is enabled or not",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            "config_sync_state": {
              "type": "string",
              "description": "status of the config sync",
              "enum": [
                "In-Sync",
                "Disabled",
                "SW Image Version Mismatch Error",
                "Conflicting or missing Dev Roles",
                "Peer DB Connection Error",
                "Configuration Sync Conflict",
                "Configuration Sync Missing Reference",
                "Peer Reachable",
                "Peer Unreachable",
                "Operational",
                "Inter Switch Link Management Init",
                "Conflicting or Missing Device Roles",
                "Inter Switch Link Down",
                "Internal Error"
              ]
            },
            "isl_mgmt_state": {
              "type": "string",
              "description": "status of ISL Management",
              "enum": [
                "In-Sync",
                "Disabled",
                "SW Image Version Mismatch Error",
                "Conflicting or missing Dev Roles",
                "Peer DB Connection Error",
                "Configuration Sync Conflict",
                "Configuration Sync Missing Reference",
                "Peer Reachable",
                "Peer Unreachable",
                "Operational",
                "Inter Switch Link Management Init",
                "Conflicting or Missing Device Roles",
                "Inter Switch Link Down",
                "Internal Error"
              ]
            },
            "nae_state": {
              "type": "string",
              "description": "status of Network Analytics Engine",
              "enum": [
                "In-Sync",
                "Disabled",
                "SW Image Version Mismatch Error",
                "Conflicting or missing Dev Roles",
                "Peer DB Connection Error",
                "Configuration Sync Conflict",
                "Configuration Sync Missing Reference",
                "Peer Reachable",
                "Peer Unreachable",
                "Operational",
                "Inter Switch Link Management Init",
                "Conflicting or Missing Device Roles",
                "Inter Switch Link Down",
                "Internal Error"
              ]
            },
            "https_server": {
              "type": "string",
              "description": "status of HTTP Server",
              "enum": [
                "In-Sync",
                "Disabled",
                "SW Image Version Mismatch Error",
                "Conflicting or missing Dev Roles",
                "Peer DB Connection Error",
                "Configuration Sync Conflict",
                "Configuration Sync Missing Reference",
                "Peer Reachable",
                "Peer Unreachable",
                "Operational",
                "Inter Switch Link Management Init",
                "Conflicting or Missing Device Roles",
                "Inter Switch Link Down",
                "Internal Error"
              ]
            },
            "lags": {
              "type": "array",
              "description": "list lags associated with the vsx",
              "example": [
                "lag12",
                "lag20"
              ],
              "items": {
                "type": "string",
                "example": "lag3"
              }
            }
          }
        }
      }
    }
  }
}
